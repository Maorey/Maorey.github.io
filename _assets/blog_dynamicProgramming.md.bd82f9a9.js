import{B as s,o as a,e as n,f as e,D as l,G as p,s as t}from"./framework.c00dda38.js";const r='{"title":"动态规划","description":"","frontmatter":{"index":3},"headers":[{"level":2,"title":"这是啥","slug":"这是啥"},{"level":2,"title":"能干啥","slug":"能干啥"},{"level":2,"title":"怎么干","slug":"怎么干"},{"level":3,"title":"基础概念","slug":"基础概念"},{"level":2,"title":"举例子","slug":"举例子"},{"level":2,"title":"讲套路","slug":"讲套路"}],"relativePath":"blog/dynamicProgramming.md","lastUpdated":1607536267875.0022}';var m={};const c=p('<h1 id="动态规划"><a class="header-anchor" href="#动态规划" aria-hidden="true">#</a> 动态规划</h1><h2 id="这是啥"><a class="header-anchor" href="#这是啥" aria-hidden="true">#</a> 这是啥</h2><p>参考百度百科 😉 :</p><p><strong>动态规划</strong>(Dynamic Programming, DP)是:</p><ul><li><strong>数学</strong>的二级学科<strong>运筹学</strong>下的三级学科</li><li>求解<strong>多阶段决策过程最优化</strong>的过程, 是一种数学方法论, 没有公式可套 (但有套路)</li><li>每个阶段的决策依赖当前状态, 而又会引起状态转移, 故称&quot;动态&quot;</li><li>兄弟姐妹有 <em>线型规划</em> 、<em>非线型规划</em>、<em>组合最优化</em>、<em>图论</em>等</li></ul><h2 id="能干啥"><a class="header-anchor" href="#能干啥" aria-hidden="true">#</a> 能干啥</h2><p><s>主持大菊, 运筹帷幄</s></p><p>应用广泛, 如经济、工业、军事等领域, 并在背包问题、生产经营问题、资金管理问题、资源分配问题、最短路径问题和复杂系统可靠性问题等中取得了显著的效果...</p><div class="tip custom-block"><p class="custom-block-title">画重点</p><p>这里只讨论编程领域的应用</p></div><h2 id="怎么干"><a class="header-anchor" href="#怎么干" aria-hidden="true">#</a> 怎么干</h2><h3 id="基础概念"><a class="header-anchor" href="#基础概念" aria-hidden="true">#</a> 基础概念</h3><p><em>(做出决策 = 计算出结果)</em></p><ul><li>状态: 当前阶段上下文</li><li>无后效性: 当前阶段做出决策后不再受其他阶段决策影响, 即状态转移有序</li><li>状态转移方程: 不同阶段间上下文关系</li><li>重叠子问题: 不同阶段之间要解决的若干问题有重复</li><li>最优子结构: 对阶段的划分和决策的过程最优化, 最优子结构一定也是由最优子结构组成</li><li>边界: 无法继续优化的阶段, 即可以直接做出决策 <em>(无边界 = 无解/无数解 = 死循环)</em></li><li>备忘录(DP Table): 在寻找最优子结构, 化简状态转移方程的过程中用于记录各阶段状态或决策的额外数据, 应该尽量去掉</li></ul><h2 id="举例子"><a class="header-anchor" href="#举例子" aria-hidden="true">#</a> 举例子</h2><p>与分治法类似 (如快速/归并排序算法), 都是将待求解问题分为若干子问题, 从子问题的解得到原问题的解, 大事化小, 小事化了. 不同的是分治法一般是<strong>自顶向下</strong>递归求解, 而动态规划优化后一般是<strong>自底向上</strong>求解</p>',15),d=t("斐波那契数列 "),i={class:"katex"},u={class:"katex-mathml"},f=t("f"),o=t("("),h=t("n"),A=t(")"),g=t("="),x=t("{"),_=t("("),B=t("1"),y=t(","),b=t("if"),T=t("n"),v=t("="),w=t("1"),P=t(","),k=t("2"),q=t(")"),D=t(","),S=t("("),C=t("f"),I=t("("),V=t("n"),M=t("−"),E=t("1"),N=t(")"),R=t("+"),j=t("f"),G=t("("),L=t("n"),U=t("−"),z=t("2"),F=t(")"),H=t(","),J=t("if"),K=t("n"),O=t(">"),Q=t("2"),W=t(")"),X=t("\\{f\\{\\{\\left(\\{n}\\right)}}}=\\{\\left\\lbrace\\{\\left(\\{1},\\{\\quad\\text\\{if}\\quad}\\{n}=\\{1},\\{2}\\right)},\\{\\left(\\{f\\{\\{\\left(\\{n}-\\{1}\\right)}}}+\\{f\\{\\{\\left(\\{n}-\\{2}\\right)}}},\\{\\quad\\text\\{if}\\quad}\\{n}>\\{2}\\right)}\\right.}"),Y=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord">1</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord">if</span></span><span class="mspace" style="margin-right:1em;"></span></span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">1</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord">if</span></span><span class="mspace" style="margin-right:1em;"></span></span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>',1),Z=t(" 的求解按照这两种方法的执行过程如下:"),$=e("p",null,"普通递归算法:",-1),ss=e("pre",{class:"mermaid loading"},'flowchart TB\n  A("f(n)") --\x3e A1("f(n - 1)")\n    A1 --\x3e A11("f(n - 2)")\n      A11 --\x3e A111(...)\n        A111 --\x3e A1111("f(1)") --\x3e B111\n        A111 --\x3e A1112("f(2)") --\x3e B111\n      A11 --\x3e A112(...)\n        A112 --\x3e A1121("f(1)") --\x3e B112\n        A112 --\x3e A1122("f(2)") --\x3e B112\n    A1 --\x3e A12("f(n - 3)")\n      subgraph b\n      A12 --\x3e A121(...)\n        A121 --\x3e A1211("f(1)") --\x3e B121\n        A121 --\x3e A1212("f(2)") --\x3e B121\n      A12 --\x3e A122(...)\n        A122 --\x3e A1221("f(1)") --\x3e B122\n        A122 --\x3e A1222("f(2)") --\x3e B122\n      end\n  A --\x3e A2("f(n - 2)")\n  subgraph a\n    A2 --\x3e A21("f(n - 3)")\n      A21 --\x3e A211(...)\n        A211 --\x3e A2111("f(1)") --\x3e B211\n        A211 --\x3e A2112("f(2)") --\x3e B211\n      A21 --\x3e A212(...)\n        A212 --\x3e A2121("f(1)") --\x3e B212\n        A212 --\x3e A2122("f(2)") --\x3e B212\n    A2 --\x3e A22("f(n - 4)")\n      A22 --\x3e A221(...)\n        A221 --\x3e A2211("f(1)") --\x3e B221\n        A221 --\x3e A2212("f(2)") --\x3e B221\n      A22 --\x3e A222(...)\n        A222 --\x3e A2221("f(1)") --\x3e B222\n        A222 --\x3e A2222("f(2)") --\x3e B222\n  end\n\n  B1("f(n - 1)") --\x3e B("f(n)")\n    B11("f(n - 2)") --\x3e B1\n      B111(...) --\x3e B11\n      B112(...) --\x3e B11\n    B12("f(n - 3)") --\x3e B1\n      subgraph b\n      B121(...) --\x3e B12\n      B122(...) --\x3e B12\n      end\n  B2("f(n - 2)") --\x3e B\n    subgraph a\n    B21("f(n - 3)") --\x3e B2\n      B211(...) --\x3e B21\n      B212(...) --\x3e B21\n    B22("f(n - 4)") --\x3e B2\n      B221(...) --\x3e B22\n      B222(...) --\x3e B22\n    end',-1),as=e("p",null,"可以看到圈起来的都是重复计算的",-1),ns=e("p",null,"动态规划算法:",-1),es=e("pre",{class:"mermaid loading"},'flowchart TB\n  A1("f(1)") --\x3e A3("f(3)")\n  A2("f(2)") --\x3e A3\n  A2 --\x3e A4("f(4)")\n  A3 --\x3e A4\n  A3 --\x3e Ad1(...)\n  A4 --\x3e Ad1\n  A4 --\x3e Ad2(...)\n  Ad1 --\x3e Ad2\n  Ad1 --\x3e An1("f(n - 1)")\n  Ad2 --\x3e An1\n  Ad2 --\x3e An("f(n)")\n  An1 --\x3e An',-1),ls=e("p",null,"效果显著",-1),ps=e("h2",{id:"讲套路"},[e("a",{class:"header-anchor",href:"#讲套路","aria-hidden":"true"},"#"),t(" 讲套路")],-1);m.render=function(p,t,r,m,ts,rs){const ms=s("mi"),cs=s("mo"),ds=s("mrow"),is=s("mn"),us=s("mspace"),fs=s("mtext"),os=s("annotation"),hs=s("semantics"),As=s("math");return a(),n("div",null,[c,e("p",null,[d,e("span",i,[e("span",u,[e(As,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:l((()=>[e(hs,null,{default:l((()=>[e(ds,null,{default:l((()=>[e(ds,null,{default:l((()=>[e(ms,null,{default:l((()=>[f])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[o])),_:1}),e(ms,null,{default:l((()=>[h])),_:1}),e(cs,{fence:"true"},{default:l((()=>[A])),_:1})])),_:1})])),_:1}),e(cs,null,{default:l((()=>[g])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[x])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[_])),_:1}),e(is,null,{default:l((()=>[B])),_:1}),e(cs,{separator:"true"},{default:l((()=>[y])),_:1}),e(ds,null,{default:l((()=>[e(us,{width:"1em"}),e(fs,null,{default:l((()=>[b])),_:1}),e(us,{width:"1em"})])),_:1}),e(ms,null,{default:l((()=>[T])),_:1}),e(cs,null,{default:l((()=>[v])),_:1}),e(is,null,{default:l((()=>[w])),_:1}),e(cs,{separator:"true"},{default:l((()=>[P])),_:1}),e(is,null,{default:l((()=>[k])),_:1}),e(cs,{fence:"true"},{default:l((()=>[q])),_:1})])),_:1}),e(cs,{separator:"true"},{default:l((()=>[D])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[S])),_:1}),e(ds,null,{default:l((()=>[e(ms,null,{default:l((()=>[C])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[I])),_:1}),e(ms,null,{default:l((()=>[V])),_:1}),e(cs,null,{default:l((()=>[M])),_:1}),e(is,null,{default:l((()=>[E])),_:1}),e(cs,{fence:"true"},{default:l((()=>[N])),_:1})])),_:1})])),_:1}),e(cs,null,{default:l((()=>[R])),_:1}),e(ds,null,{default:l((()=>[e(ms,null,{default:l((()=>[j])),_:1}),e(ds,null,{default:l((()=>[e(cs,{fence:"true"},{default:l((()=>[G])),_:1}),e(ms,null,{default:l((()=>[L])),_:1}),e(cs,null,{default:l((()=>[U])),_:1}),e(is,null,{default:l((()=>[z])),_:1}),e(cs,{fence:"true"},{default:l((()=>[F])),_:1})])),_:1})])),_:1}),e(cs,{separator:"true"},{default:l((()=>[H])),_:1}),e(ds,null,{default:l((()=>[e(us,{width:"1em"}),e(fs,null,{default:l((()=>[J])),_:1}),e(us,{width:"1em"})])),_:1}),e(ms,null,{default:l((()=>[K])),_:1}),e(cs,null,{default:l((()=>[O])),_:1}),e(is,null,{default:l((()=>[Q])),_:1}),e(cs,{fence:"true"},{default:l((()=>[W])),_:1})])),_:1})])),_:1})])),_:1}),e(os,{encoding:"application/x-tex"},{default:l((()=>[X])),_:1})])),_:1})])),_:1})]),Y]),Z]),$,ss,as,ns,es,ls,ps])};export default m;export{r as __pageData};
