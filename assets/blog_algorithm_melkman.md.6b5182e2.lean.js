import{S as n}from"./canvas.module.835ad0e7.js";import{o as s,c as a,d as p,n as t,r as e,a as o,b as l,e as c}from"./app.65a05e52.js";function*r(n,s,a,p,t){const{x:e,y:o}=s,l=a.x-e,c=a.y-o,u=[];let i,k=0;const{x:m,y:b}=a,d=p.x-m,y=p.y-b,h=[];let g,w,x,f=0,v=n.length;for(;v;)w=n[--v],x=l*(w.y-o)-(w.x-e)*c,x>0?(yield t.concat(a,w),u.push(w),x>k&&(k=x,i=w)):(x=d*(w.y-b)-(w.x-m)*y,x>0&&(yield t.concat(p,w),h.push(w),x>f&&(f=x,g=w)));return i&&(yield*r(u,s,i,a,t)),t.push(a),g&&(yield*r(h,a,g,p,t)),t}const u=function*(n){const s=n.length;if(s<4)return n;let a,p,t,e=s;for(;e;)t=n[--e],(!a||a.x>t.x)&&(a=t),(!p||p.x<t.x)&&(p=t);const{x:o,y:l}=a,c=p.x-o,u=p.y-l;let i,k,m=0,b=0;const d=[],y=[];let h;for(e=s;e;)t=n[--e],yield[a,p,t],h=c*(t.y-l)-(t.x-o)*u,h>0?(d.push(t),h>m&&(m=h,i=t)):h<0&&(y.push(t),h<b&&(b=h,k=t));if(a===p)return[i,k];if(i===k)return[a,p];const g=[a];return i&&(yield*r(d,a,i,p,g)),g.push(p),k&&(yield*r(y,p,k,a,g)),g},i=(n,s,a)=>{n.clearRect(0,0,320,320),s&&((n,s)=>{let a=s.length;if(a){let p;for(n.fillStyle="red";a--;)p=s[a],n.fillRect(p.x-2,p.y-2,4,4)}})(n,s),a&&((n,s)=>{let a=s.length;if(a){let p=s[--a];for(n.beginPath(),n.moveTo(p.x,p.y);a;)p=s[--a],n.lineTo(p.x,p.y);n.closePath(),n.strokeStyle="green",n.stroke()}})(n,a)};var k={setup(){const s=[];let a;return{STYLE:n,random(n){let p=+n.target.previousSibling.value||+(Math.random()+"").slice(8,9+(2*Math.random()|0))+1;for(s.splice(p);p;)s[--p]={x:320*Math.random()|0,y:320*Math.random()|0};a||(a=n.target.nextSibling.getContext("2d")),i(a,s)},run(){if(a&&s){const n=u(s);let p;for(;!(p=n.next()).done;);i(a,s,p.value)}},clear(){s.splice(0),a&&i(a)},onClick(n){const p=n.target;a=p.getContext("2d"),s.push({x:n.pageX-p.offsetLeft,y:n.pageY-p.offsetTop}),i(a,s)}}}};const m=p("input",{type:"number",min:"1",step:"3"},null,-1);k.render=function(n,e,o,l,c,r){return s(),a("div",{class:t(l.STYLE.wrap)},[p("i",{onClick:e[0]||(e[0]=(...n)=>l.run&&l.run(...n))},"生成最小凸包"),p("i",{onClick:e[1]||(e[1]=(...n)=>l.clear&&l.clear(...n))},"重置"),m,p("i",{onClick:e[2]||(e[2]=(...n)=>l.random&&l.random(...n))},"生成随机点"),p("canvas",{width:"320",height:"320",onClick:e[3]||(e[3]=(...n)=>l.onClick&&l.onClick(...n))})],2)};const b=(n,s,a="red",p=4)=>{let t=s.length;if(t){n.fillStyle=a;const e=p>>1;let o;for(;t--;)o=s[t],n.fillRect(o.x-e,o.y-e,p,p)}},d=(n,s,a="green",p)=>{let t=s.length,e=s[--t];for(n.beginPath(),n.moveTo(e.x,e.y);t;)e=s[--t],n.lineTo(e.x,e.y);p&&n.closePath(),n.strokeStyle=a,n.stroke()},y=(n,s,a)=>{n.clearRect(0,0,320,320),s&&b(n,s);let p=a&&a.length;if(p){let s=a[p-1];if(Array.isArray(s))for(a.done||(b(n,s,"green",6),d(n,s,"red"),p--);p;)d(n,a[--p]);else a.done||(b(n,[s],"green",6),--p&&d(n,[s,a[p-1]],"red"),a=a.slice(0,p)),d(n,a,"green",a.done)}};var h={props:{algorithm:Function,speed:Number},setup(s){const a=[];let p,t=s.speed,e=!1;return{STYLE:n,up(){t+=10},down(){t-=10,t<t&&(t=10)},random(n){e=!0;let s=+n.target.previousSibling.value||+(Math.random()+"").slice(8,9+(2*Math.random()|0))+1;for(a.splice(s);s;)a[--s]={x:320*Math.random()|0,y:320*Math.random()|0};p||(p=n.target.nextSibling.getContext("2d")),y(p,a)},async run(){if(e=!1,!p||!a.length)return;const n=function*(n,s,a){const p=n(s);let t;do{t=p.next(),a=yield new Promise((n=>{const s=t.value;s.done=t.done,setTimeout((()=>{n(s)}),a)}))}while(!t.done)}(s.algorithm,a,t);let o;for(;!(o=n.next(t)).done;){const n=await o.value;if(e)return;y(p,a,n)}},clear(){e=!0,a.splice(0),p&&y(p)},onClick(n){e=!0;const s=n.target;p=s.getContext("2d"),a.push({x:n.pageX-s.offsetLeft,y:n.pageY-s.offsetTop}),y(p,a)}}}};const g=p("br",null,null,-1),w=p("input",{type:"number",min:"1",step:"3"},null,-1),x=p("br",null,null,-1);h.render=function(n,e,o,l,c,r){return s(),a("div",{class:t(l.STYLE.wrap)},[g,p("i",{onClick:e[0]||(e[0]=(...n)=>l.run&&l.run(...n))},"生成最小凸包"),p("i",{onClick:e[1]||(e[1]=(...n)=>l.clear&&l.clear(...n))},"重置"),p("i",{onClick:e[2]||(e[2]=(...n)=>l.down&&l.down(...n))},"加速"),p("i",{onClick:e[3]||(e[3]=(...n)=>l.up&&l.up(...n))},"减速"),w,p("i",{onClick:e[4]||(e[4]=(...n)=>l.random&&l.random(...n))},"生成随机点"),p("canvas",{width:"320",height:"320",onClick:e[5]||(e[5]=(...n)=>l.onClick&&l.onClick(...n))}),x],2)};const f=(n,s)=>n===s||n.x===s.x&&n.y===s.y;function v(n,s,a){let p=n.length;if(a<p>>1)for(n.unshift(n[0]),p=1;p<=a;)n[p]=n[++p];else for(;p>a;)n[p]=n[--p];n[a]=s}function P(n,s,a){let p,t=0,e=s.length-1;for(;t<=e;)p=t+e>>1,a(s[p],n)?e=p-1:t=p+1;v(s,n,t)}function*_(n,s,a){let p=n.length;v(n,s,a),yield n.concat(n[0]);let t,e=a?a-1:p;const o=n[a];let l,c=n[e];for(;c!==o&&(t=e?e-1:p,l=n[t],!((c.x-o.x)*(l.y-o.y)<=(l.x-o.x)*(c.y-o.y)));)n.splice(e,1),p--,a&&a--,e=a?a-1:p,c=n[e],yield n.concat(n[0]);const r=c;for(e=a===p?0:a+1,c=n[e];c!==o&&c!==r&&(t=e===p?0:e+1,l=n[t],!((c.x-o.x)*(l.y-o.y)>=(l.x-o.x)*(c.y-o.y)));)n.splice(e,1),p--,e=e===p?0:e,c=n[e],yield n.concat(n[0]);return p}var A={components:{Show:k,Play:h},methods:{exhaust:function*(n){const s=n.length;if(s<4)return n;const a=[];let p=s;for(;p;){const t=n[--p],{x:e,y:o}=t;let l=p;for(;l;){const c=n[--l],r=c.x-e,u=c.y-o;let i=null,k=s;for(;k;){if(--k===p||k===l)continue;const s=n[k];yield a.concat([[t,c,s]]);const m=r*(s.y-o)>(s.x-e)*u;if(null===i)i=m;else if(m!==i){i=null;break}}null!==i&&(a.push([t,c]),yield a)}}return a},divide:u,jarvis:function*(n){const s=n.length;if(s<4)return n;let a,p,t=s;for(;t;)p=n[--t],(!a||p.x<a.x||p.x===a.x&&p.y<a.y)&&(a=p);const e=[a];let o,l,c,r,u,i,k=0;for(t=s;t;)if(p=n[--t],o=e[k],!f(p,o)){for(e.push(p),k++,l=o.x,c=o.y,r=p.x-l,u=p.y-c,i=s;i;)p=n[--i],yield e.concat(p),r*(p.y-c)<(p.x-l)*u&&(e[k]=p,r=p.x-l,u=p.y-c);if(f(e[k],a)){e.pop();break}}return e},graham:function*(n){let s,a,p=n.length;if(p<4)return n;for(;p;)a=n[--p],(!s||a.x<s.x||a.x===s.x&&a.y<s.y)&&(s=a);const t=[s];let e,o,l=1;for(n=function(n,s){const a=[],p=new WeakMap,t=n=>{let a=p.get(n);if(!a){const t=((s.x-n.x)**2+(s.y-n.y)**2)**.5;a=[(n.y-s.y)/t,t],p.set(n,a)}return a},e=(n,s)=>{const a=t(n),p=t(s);return a[0]===p[0]?a[1]<p[1]:a[0]<p[0]};let o=n.length;for(;o;)(l=n[--o])===(c=s)||l.x===c.x&&l.y===c.y||P(n[o],a,e);var l,c;return a}(n,s),p=n.length,p&&t.push(n[--p]),yield t;p;)a=n[p-1],yield t.concat(a),e=t[l-1],o=t[l],(o.x-e.x)*(a.y-e.y)<(a.x-e.x)*(o.y-e.y)?(t.pop(),l--):(t.push(a),l++,p--);return t},melkman:function*(n){let s=n.length;if(s<4)return n;const a=[n[--s]];let p,t,e,o,l=0;for(;s;)if(e=n[--s],t=a[l],(c=e)!==(r=t)&&(c.x!==r.x||c.y!==r.y))if(yield a.concat(e,a[0]),p=a[l-1],p){if(o=(t.x-p.x)*(e.y-p.y)-(e.x-p.x)*(t.y-p.y),o){o>0?a.push(e):(a[2]=a[1],a[1]=e),l++;break}e.x<p.x&&e.x<t.x||e.y<p.y&&e.y<t.y?a[p.x<t.x||p.y<t.y?l-1:l]=e:(e.x>p.x&&e.x>t.x||e.y>p.y&&e.y>t.y)&&(a[p.x>t.x||p.y>t.y?l-1:l]=e)}else a.push(e),l++;var c,r;let u,i;for(;s;)for(e=n[--s],yield a.concat(e,a[0]),u=0,i=l+1;i--;u=i)if(p=a[u],t=a[i],(t.x-p.x)*(e.y-p.y)>=(e.x-p.x)*(t.y-p.y)){l=yield*_(a,e,u);break}return a}}};const M='{"title":"最小凸包","description":"","frontmatter":{"title":"最小凸包","index":3},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"演示","slug":"演示"},{"level":2,"title":"前置知识","slug":"前置知识"},{"level":2,"title":"方法介绍","slug":"方法介绍"},{"level":3,"title":"穷举法 (O(n))","slug":"穷举法-o-n3"},{"level":3,"title":"分治法 (快包 O(n㏒n))","slug":"分治法-快包-o-n㏒n"},{"level":3,"title":"Jarvis 步进法 (O(nH))","slug":"jarvis-步进法-o-nh"},{"level":3,"title":"Graham 扫描法 (O(n㏒n)) [^GrahamScan]","slug":"graham-扫描法-o-n㏒n"},{"level":3,"title":"Melkman 算法 (O(n))","slug":"melkman-算法-o-n"},{"level":2,"title":"升维","slug":"升维"},{"level":2,"title":"参考链接","slug":"参考链接"}],"relativePath":"blog/algorithm/melkman.md","lastUpdated":1630507747377}',T=l('',4),V=l('',5),z=p("blockquote",null,[p("p",null,[c("若"),p("strong",null,"AB"),c("之外的点都在直线"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("mi",null,"A"),p("mi",null,"B")]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{AB}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.8833300000000001em","vertical-align":"0em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.8833300000000001em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"A"),p("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])]),p("span",{style:{top:"-3.80333em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])])])])])])])]),c("的"),p("strong",null,"同一侧"),c(", 则点"),p("strong",null,"A"),c("和点"),p("strong",null,"B"),c("都是凸包的顶点")])],-1),E=p("p",null,"计算的步骤为:",-1),S=p("ol",null,[p("li",null,[c("从点集里取出一点"),p("strong",null,"A"),c(", 与剩下的点"),p("strong",null,"B"),c("依次连接, 得到一条直线"),p("strong",null,"L"),c("("),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("mi",null,"A"),p("mi",null,"B")]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{AB}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.8833300000000001em","vertical-align":"0em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.8833300000000001em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"A"),p("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])]),p("span",{style:{top:"-3.80333em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])])])])])])])]),c(") (共 "),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mstyle",{scriptlevel:"0",displaystyle:"true"},[p("munderover",null,[p("mo",null,"∑"),p("mrow",null,[p("mi",null,"i"),p("mo",null,"="),p("mn",null,"1")]),p("mrow",null,[p("mi",null,"n"),p("mo",null,"−"),p("mn",null,"1")])]),p("mi",null,"i")])]),p("annotation",{encoding:"application/x-tex"},"\\displaystyle\\sum_{i=1}^{n-1}{i}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"3.0787820000000004em","vertical-align":"-1.277669em"}}),p("span",{class:"mop op-limits"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"1.8011130000000004em"}},[p("span",{style:{top:"-1.872331em","margin-left":"0em"}},[p("span",{class:"pstrut",style:{height:"3.05em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},[p("span",{class:"mord mathnormal mtight"},"i"),p("span",{class:"mrel mtight"},"="),p("span",{class:"mord mtight"},"1")])])]),p("span",{style:{top:"-3.050005em"}},[p("span",{class:"pstrut",style:{height:"3.05em"}}),p("span",null,[p("span",{class:"mop op-symbol large-op"},"∑")])]),p("span",{style:{top:"-4.300005em","margin-left":"0em"}},[p("span",{class:"pstrut",style:{height:"3.05em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},[p("span",{class:"mord mathnormal mtight"},"n"),p("span",{class:"mbin mtight"},"−"),p("span",{class:"mord mtight"},"1")])])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"1.277669em"}},[p("span")])])])]),p("span",{class:"mspace",style:{"margin-right":"0.16666666666666666em"}}),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"i")])])])]),c(" 条)")]),p("li",null,[c("判断其他点(共 "),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mi",null,"n"),p("mo",null,"−"),p("mn",null,"2")]),p("annotation",{encoding:"application/x-tex"},"n - 2")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.66666em","vertical-align":"-0.08333em"}}),p("span",{class:"mord mathnormal"},"n"),p("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}}),p("span",{class:"mbin"},"−"),p("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}})]),p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),p("span",{class:"mord"},"2")])])]),c(" 个)是否都在直线"),p("strong",null,"L"),c("的同一侧, 是则将"),p("strong",null,"L"),c("加入边数组")]),p("li",null,[c("[按需] 将边数组转换为点数组 (将边首尾相连并展平"),p("code",null,"O(n㏒n)"),c(")")])],-1),C=p("h4",{id:"演示-1"},[p("a",{class:"header-anchor",href:"#演示-1","aria-hidden":"true"},"#"),c(" 演示")],-1),I=l('',12),L=p("ol",null,[p("li",null,[c("找到x极值点"),p("strong",null,"p0"),c("和"),p("strong",null,"p1"),c("(p0.x < p1.x>), 线段"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("msub",null,[p("mi",null,"p"),p("mn",null,"0")]),p("msub",null,[p("mi",null,"p"),p("mn",null,"1")])]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{p_0p_1}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.63056em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"0")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])]),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"1")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])])])]),p("span",{style:{top:"-3.55056em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.19444em"}},[p("span")])])])])])])]),c("将点集划分为两个部分, 称作"),p("strong",null,"上包"),c("(逆时针方向)和"),p("strong",null,"下包"),c("(顺时针方向)")]),p("li",null,[c("在"),p("strong",null,"上包"),c("中找到离直线"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("msub",null,[p("mi",null,"p"),p("mn",null,"0")]),p("msub",null,[p("mi",null,"p"),p("mn",null,"1")])]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{p_0p_1}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.63056em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"0")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])]),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"1")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])])])]),p("span",{style:{top:"-3.55056em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.19444em"}},[p("span")])])])])])])]),c("最远的点"),p("strong",null,"p2"),c(", 分别使用直线"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("msub",null,[p("mi",null,"p"),p("mn",null,"0")]),p("msub",null,[p("mi",null,"p"),p("mn",null,"2")])]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{p_0p_2}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.63056em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"0")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])]),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"2")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])])])]),p("span",{style:{top:"-3.55056em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.19444em"}},[p("span")])])])])])])]),c(" 和 直线"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mover",{accent:"true"},[p("mrow",null,[p("msub",null,[p("mi",null,"p"),p("mn",null,"2")]),p("msub",null,[p("mi",null,"p"),p("mn",null,"1")])]),p("mo",{stretchy:"true"},"‾")])]),p("annotation",{encoding:"application/x-tex"},"\\overline{p_2p_1}")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),p("span",{class:"mord overline"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.63056em"}},[p("span",{style:{top:"-3em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"mord"},[p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"2")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])]),p("span",{class:"mord"},[p("span",{class:"mord mathnormal"},"p"),p("span",{class:"msupsub"},[p("span",{class:"vlist-t vlist-t2"},[p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[p("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[p("span",{class:"pstrut",style:{height:"2.7em"}}),p("span",{class:"sizing reset-size6 size3 mtight"},[p("span",{class:"mord mtight"},"1")])])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.15em"}},[p("span")])])])])])])]),p("span",{style:{top:"-3.55056em"}},[p("span",{class:"pstrut",style:{height:"3em"}}),p("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),p("span",{class:"vlist-s"},"​")]),p("span",{class:"vlist-r"},[p("span",{class:"vlist",style:{height:"0.19444em"}},[p("span")])])])])])])]),c(" 继续划分出新的上包"),p("strong",null,"A"),c("(逆时针方向, 下包一定在多边形内部了) "),p("ol",null,[p("li",null,[c("若"),p("strong",null,"A"),c("为空, 不再继续划分")]),p("li",null,[p("strong",null,"A"),c("不为空则对"),p("strong",null,"A"),c("按照步骤"),p("strong",null,"2"),c("进行划分")])])]),p("li",null,[c("对"),p("strong",null,"下包"),c("也做与"),p("strong",null,"第2步"),c("相似的操作")])],-1),j=p("h4",{id:"演示-2"},[p("a",{class:"header-anchor",href:"#演示-2","aria-hidden":"true"},"#"),c(" 演示")],-1),D=l('',8),q=l('',7),O=p("details",null,[p("summary",null,"推导及代码实现"),p("p",null,[c("其他点与起点的幅角范围为 [0, 180°], 使用"),p("span",{class:"katex"},[p("span",{class:"katex-mathml"},[p("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[p("semantics",null,[p("mrow",null,[p("mi",null,"cos"),p("mo",null,"⁡")]),p("annotation",{encoding:"application/x-tex"},"\\cos")])])]),p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),p("span",{class:"mop"},"cos")])])]),c("函数即可排序幅角, 同时可计算出距离")]),p("div",{class:"language-ts line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token keyword"},"import"),c(),p("span",{class:"token keyword"},"type"),c(),p("span",{class:"token punctuation"},"{"),c(" Point"),p("span",{class:"token punctuation"},","),c(" Algorithm "),p("span",{class:"token punctuation"},"}"),c(),p("span",{class:"token keyword"},"from"),c(),p("span",{class:"token string"},"'./types'"),c("\n\n"),p("span",{class:"token keyword"},"const"),c(),p("span",{class:"token function-variable function"},"isPointEqual"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"("),c("a"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},","),c(" b"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"=>"),c(" a "),p("span",{class:"token operator"},"==="),c(" b "),p("span",{class:"token operator"},"||"),c(),p("span",{class:"token punctuation"},"("),c("a"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"==="),c(" b"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"&&"),c(" a"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"==="),c(" b"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),c("\n\n"),p("span",{class:"token comment"},"/** 将 point 插入到 points 的 position 下标 (最多挪动一半元素)\n * @param points\n * @param point\n * @param position 整数范围: [0, points.length)\n */"),c("\n"),p("span",{class:"token keyword"},"export"),c(),p("span",{class:"token keyword"},"function"),c(),p("span",{class:"token function"},"insertAt"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c(" point"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},","),c(" position"),p("span",{class:"token operator"},":"),c(),p("span",{class:"token builtin"},"number"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" pointer "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"."),c("length\n  "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),c("position "),p("span",{class:"token operator"},"<"),c(" pointer "),p("span",{class:"token operator"},">>"),c(),p("span",{class:"token number"},"1"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    points"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"unshift"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"0"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},")"),c("\n    pointer "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token number"},"1"),c("\n    "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("pointer "),p("span",{class:"token operator"},"<="),c(" position"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      points"),p("span",{class:"token punctuation"},"["),c("pointer"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token operator"},"++"),c("pointer"),p("span",{class:"token punctuation"},"]"),c("\n    "),p("span",{class:"token punctuation"},"}"),c("\n  "),p("span",{class:"token punctuation"},"}"),c(),p("span",{class:"token keyword"},"else"),c(),p("span",{class:"token punctuation"},"{"),c("\n    "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("pointer "),p("span",{class:"token operator"},">"),c(" position"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      points"),p("span",{class:"token punctuation"},"["),c("pointer"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token operator"},"--"),c("pointer"),p("span",{class:"token punctuation"},"]"),c("\n    "),p("span",{class:"token punctuation"},"}"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n  points"),p("span",{class:"token punctuation"},"["),c("position"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"="),c(" point\n"),p("span",{class:"token punctuation"},"}"),c("\n\n"),p("span",{class:"token comment"},"/** [稳定] 将 point 插入 points\n * @param point\n * @param points\n * @param compare 比较方法 返回 true: element > point\n */"),c("\n"),p("span",{class:"token keyword"},"function"),c(),p("span",{class:"token function"},"insert"),p("span",{class:"token punctuation"},"("),c("\n  point"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},","),c("\n  points"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c("\n  "),p("span",{class:"token function-variable function"},"compare"),p("span",{class:"token operator"},":"),c(),p("span",{class:"token punctuation"},"("),c("element"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},","),c(" point"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"=>"),c(),p("span",{class:"token builtin"},"boolean"),c("\n"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n  "),p("span",{class:"token comment"},"// 二分查找 [low, high]"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" low "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token number"},"0"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" mid"),p("span",{class:"token operator"},":"),c(),p("span",{class:"token builtin"},"number"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" high "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"."),c("length "),p("span",{class:"token operator"},"-"),c(),p("span",{class:"token number"},"1"),c("\n  "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("low "),p("span",{class:"token operator"},"<="),c(" high"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    mid "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"("),c("low "),p("span",{class:"token operator"},"+"),c(" high"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},">>"),c(),p("span",{class:"token number"},"1"),c(),p("span",{class:"token comment"},"// 除2并向下取整"),c("\n    "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),p("span",{class:"token function"},"compare"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},"["),c("mid"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c(" point"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      high "),p("span",{class:"token operator"},"="),c(" mid "),p("span",{class:"token operator"},"-"),c(),p("span",{class:"token number"},"1"),c("\n    "),p("span",{class:"token punctuation"},"}"),c(),p("span",{class:"token keyword"},"else"),c(),p("span",{class:"token punctuation"},"{"),c("\n      low "),p("span",{class:"token operator"},"="),c(" mid "),p("span",{class:"token operator"},"+"),c(),p("span",{class:"token number"},"1"),c("\n    "),p("span",{class:"token punctuation"},"}"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token comment"},"// points.splice(low, 0, point)"),c("\n  "),p("span",{class:"token function"},"insertAt"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},","),c(" point"),p("span",{class:"token punctuation"},","),c(" low"),p("span",{class:"token punctuation"},")"),c("\n"),p("span",{class:"token punctuation"},"}"),c("\n"),p("span",{class:"token comment"},"/** 将点集按与 start→x轴正向 的幅角 排序 (幅角相等按距离)\n * @param points\n * @param start\n * @returns\n */"),c("\n"),p("span",{class:"token keyword"},"function"),c(),p("span",{class:"token function"},"sortPoints"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c(" start"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n  "),p("span",{class:"token keyword"},"const"),c(" result"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),c("\n\n  "),p("span",{class:"token comment"},"/** 缓存点与起点的角度、距离 */"),c("\n  "),p("span",{class:"token keyword"},"const"),c(" cache "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token keyword"},"new"),c(),p("span",{class:"token class-name"},[c("WeakMap"),p("span",{class:"token operator"},"<"),c("Point"),p("span",{class:"token punctuation"},","),c(),p("span",{class:"token punctuation"},"["),p("span",{class:"token comment"},"/** angle */"),c(),p("span",{class:"token builtin"},"number"),p("span",{class:"token punctuation"},","),c(),p("span",{class:"token comment"},"/** distance */"),c(),p("span",{class:"token builtin"},"number"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token operator"},">")]),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),c("\n  "),p("span",{class:"token keyword"},"const"),c(),p("span",{class:"token function-variable function"},"getInfo"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"=>"),c(),p("span",{class:"token punctuation"},"{"),c("\n    "),p("span",{class:"token keyword"},"let"),c(" info "),p("span",{class:"token operator"},"="),c(" cache"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"get"),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},")"),c("\n    "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),p("span",{class:"token operator"},"!"),c("info"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      "),p("span",{class:"token keyword"},"const"),c(" distance "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},"("),c("start"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"-"),c(" point"),p("span",{class:"token punctuation"},"."),c("x"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"**"),c(),p("span",{class:"token number"},"2"),c(),p("span",{class:"token operator"},"+"),c(),p("span",{class:"token punctuation"},"("),c("start"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"-"),c(" point"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"**"),c(),p("span",{class:"token number"},"2"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"**"),c(),p("span",{class:"token number"},"0.5"),c("\n      info "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"-"),c(" start"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"/"),c(" distance"),p("span",{class:"token punctuation"},","),c(" distance"),p("span",{class:"token punctuation"},"]"),c("\n      cache"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"set"),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},","),c(" info"),p("span",{class:"token punctuation"},")"),c("\n    "),p("span",{class:"token punctuation"},"}"),c("\n\n    "),p("span",{class:"token keyword"},"return"),c(" info\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"const"),c(),p("span",{class:"token function-variable function"},"compare"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"("),c("element"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},","),c(" point"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"=>"),c(),p("span",{class:"token punctuation"},"{"),c("\n    "),p("span",{class:"token keyword"},"const"),c(" elementInfo "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token function"},"getInfo"),p("span",{class:"token punctuation"},"("),c("element"),p("span",{class:"token punctuation"},")"),c("\n    "),p("span",{class:"token keyword"},"const"),c(" pointInfo "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token function"},"getInfo"),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},")"),c("\n\n    "),p("span",{class:"token keyword"},"return"),c(" elementInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"0"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"==="),c(" pointInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"0"),p("span",{class:"token punctuation"},"]"),c("\n      "),p("span",{class:"token operator"},"?"),c(" elementInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"1"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"<"),c(" pointInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"1"),p("span",{class:"token punctuation"},"]"),c("\n      "),p("span",{class:"token operator"},":"),c(" elementInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"0"),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"<"),c(" pointInfo"),p("span",{class:"token punctuation"},"["),p("span",{class:"token number"},"0"),p("span",{class:"token punctuation"},"]"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"let"),c(" i "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"."),c("length\n  "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("i"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    "),p("span",{class:"token function"},"isPointEqual"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token operator"},"--"),c("i"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c(" start"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"||"),c(),p("span",{class:"token function"},"insert"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},"["),c("i"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},","),c(" result"),p("span",{class:"token punctuation"},","),c(" compare"),p("span",{class:"token punctuation"},")"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"return"),c(" result\n"),p("span",{class:"token punctuation"},"}"),c("\n\n"),p("span",{class:"token comment"},"/** graham扫描法求最小凸包 使用canvas坐标系, 如下\no——→ x\n|\n↓\ny\n*/"),c("\n"),p("span",{class:"token keyword"},"const"),c(" graham"),p("span",{class:"token operator"},":"),c(),p("span",{class:"token function-variable function"},"Algorithm"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token keyword"},"function"),p("span",{class:"token operator"},"*"),c(),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" i "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"."),c("length\n  "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),c("i "),p("span",{class:"token operator"},"<"),c(),p("span",{class:"token number"},"4"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    "),p("span",{class:"token keyword"},"return"),c(" points\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"let"),c(" start"),p("span",{class:"token operator"},"!"),p("span",{class:"token operator"},":"),c(" Point\n\n  "),p("span",{class:"token keyword"},"let"),c(" point"),p("span",{class:"token operator"},":"),c(" Point\n  "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("i"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    point "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token operator"},"--"),c("i"),p("span",{class:"token punctuation"},"]"),c("\n\n    "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),p("span",{class:"token operator"},"!"),c("start "),p("span",{class:"token operator"},"||"),c(" point"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"<"),c(" start"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"||"),c(),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"==="),c(" start"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"&&"),c(" point"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"<"),c(" start"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      start "),p("span",{class:"token operator"},"="),c(" point\n    "),p("span",{class:"token punctuation"},"}"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"const"),c(" result"),p("span",{class:"token operator"},":"),c(" Point"),p("span",{class:"token punctuation"},"["),p("span",{class:"token punctuation"},"]"),c(),p("span",{class:"token operator"},"="),c(),p("span",{class:"token punctuation"},"["),c("start"),p("span",{class:"token punctuation"},"]"),c("\n\n  "),p("span",{class:"token keyword"},"let"),c(" pointer "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token number"},"1"),c(),p("span",{class:"token comment"},"// 栈顶"),c("\n  "),p("span",{class:"token keyword"},"let"),c(" startPoint"),p("span",{class:"token operator"},":"),c(" Point\n  "),p("span",{class:"token keyword"},"let"),c(" endPoint"),p("span",{class:"token operator"},":"),c(" Point\n  points "),p("span",{class:"token operator"},"="),c(),p("span",{class:"token function"},"sortPoints"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},","),c(" start"),p("span",{class:"token punctuation"},")"),c("\n  i "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"."),c("length\n  i "),p("span",{class:"token operator"},"&&"),c(" result"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"push"),p("span",{class:"token punctuation"},"("),c("points"),p("span",{class:"token punctuation"},"["),p("span",{class:"token operator"},"--"),c("i"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},")"),c("\n  "),p("span",{class:"token keyword"},"yield"),c(" result\n  "),p("span",{class:"token keyword"},"while"),c(),p("span",{class:"token punctuation"},"("),c("i"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n    point "),p("span",{class:"token operator"},"="),c(" points"),p("span",{class:"token punctuation"},"["),c("i "),p("span",{class:"token operator"},"-"),c(),p("span",{class:"token number"},"1"),p("span",{class:"token punctuation"},"]"),c("\n    "),p("span",{class:"token keyword"},"yield"),c(" result"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"concat"),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},")"),c("\n\n    startPoint "),p("span",{class:"token operator"},"="),c(" result"),p("span",{class:"token punctuation"},"["),c("pointer "),p("span",{class:"token operator"},"-"),c(),p("span",{class:"token number"},"1"),p("span",{class:"token punctuation"},"]"),c("\n    endPoint "),p("span",{class:"token operator"},"="),c(" result"),p("span",{class:"token punctuation"},"["),c("pointer"),p("span",{class:"token punctuation"},"]"),c("\n\n    "),p("span",{class:"token keyword"},"if"),c(),p("span",{class:"token punctuation"},"("),c("\n      "),p("span",{class:"token punctuation"},"("),c("endPoint"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"-"),c(" startPoint"),p("span",{class:"token punctuation"},"."),c("x"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"*"),c(),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"-"),c(" startPoint"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"<"),c("\n      "),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},"."),c("x "),p("span",{class:"token operator"},"-"),c(" startPoint"),p("span",{class:"token punctuation"},"."),c("x"),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token operator"},"*"),c(),p("span",{class:"token punctuation"},"("),c("endPoint"),p("span",{class:"token punctuation"},"."),c("y "),p("span",{class:"token operator"},"-"),c(" startPoint"),p("span",{class:"token punctuation"},"."),c("y"),p("span",{class:"token punctuation"},")"),c("\n    "),p("span",{class:"token punctuation"},")"),c(),p("span",{class:"token punctuation"},"{"),c("\n      result"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"pop"),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),c("\n      pointer"),p("span",{class:"token operator"},"--"),c("\n    "),p("span",{class:"token punctuation"},"}"),c(),p("span",{class:"token keyword"},"else"),c(),p("span",{class:"token punctuation"},"{"),c("\n      result"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"push"),p("span",{class:"token punctuation"},"("),c("point"),p("span",{class:"token punctuation"},")"),c("\n      pointer"),p("span",{class:"token operator"},"++"),c("\n      i"),p("span",{class:"token operator"},"--"),c("\n    "),p("span",{class:"token punctuation"},"}"),c("\n  "),p("span",{class:"token punctuation"},"}"),c("\n\n  "),p("span",{class:"token keyword"},"return"),c(" result\n"),p("span",{class:"token punctuation"},"}"),c("\n\n"),p("span",{class:"token keyword"},"export"),c(),p("span",{class:"token keyword"},"default"),c(" graham\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br"),p("span",{class:"line-number"},"12"),p("br"),p("span",{class:"line-number"},"13"),p("br"),p("span",{class:"line-number"},"14"),p("br"),p("span",{class:"line-number"},"15"),p("br"),p("span",{class:"line-number"},"16"),p("br"),p("span",{class:"line-number"},"17"),p("br"),p("span",{class:"line-number"},"18"),p("br"),p("span",{class:"line-number"},"19"),p("br"),p("span",{class:"line-number"},"20"),p("br"),p("span",{class:"line-number"},"21"),p("br"),p("span",{class:"line-number"},"22"),p("br"),p("span",{class:"line-number"},"23"),p("br"),p("span",{class:"line-number"},"24"),p("br"),p("span",{class:"line-number"},"25"),p("br"),p("span",{class:"line-number"},"26"),p("br"),p("span",{class:"line-number"},"27"),p("br"),p("span",{class:"line-number"},"28"),p("br"),p("span",{class:"line-number"},"29"),p("br"),p("span",{class:"line-number"},"30"),p("br"),p("span",{class:"line-number"},"31"),p("br"),p("span",{class:"line-number"},"32"),p("br"),p("span",{class:"line-number"},"33"),p("br"),p("span",{class:"line-number"},"34"),p("br"),p("span",{class:"line-number"},"35"),p("br"),p("span",{class:"line-number"},"36"),p("br"),p("span",{class:"line-number"},"37"),p("br"),p("span",{class:"line-number"},"38"),p("br"),p("span",{class:"line-number"},"39"),p("br"),p("span",{class:"line-number"},"40"),p("br"),p("span",{class:"line-number"},"41"),p("br"),p("span",{class:"line-number"},"42"),p("br"),p("span",{class:"line-number"},"43"),p("br"),p("span",{class:"line-number"},"44"),p("br"),p("span",{class:"line-number"},"45"),p("br"),p("span",{class:"line-number"},"46"),p("br"),p("span",{class:"line-number"},"47"),p("br"),p("span",{class:"line-number"},"48"),p("br"),p("span",{class:"line-number"},"49"),p("br"),p("span",{class:"line-number"},"50"),p("br"),p("span",{class:"line-number"},"51"),p("br"),p("span",{class:"line-number"},"52"),p("br"),p("span",{class:"line-number"},"53"),p("br"),p("span",{class:"line-number"},"54"),p("br"),p("span",{class:"line-number"},"55"),p("br"),p("span",{class:"line-number"},"56"),p("br"),p("span",{class:"line-number"},"57"),p("br"),p("span",{class:"line-number"},"58"),p("br"),p("span",{class:"line-number"},"59"),p("br"),p("span",{class:"line-number"},"60"),p("br"),p("span",{class:"line-number"},"61"),p("br"),p("span",{class:"line-number"},"62"),p("br"),p("span",{class:"line-number"},"63"),p("br"),p("span",{class:"line-number"},"64"),p("br"),p("span",{class:"line-number"},"65"),p("br"),p("span",{class:"line-number"},"66"),p("br"),p("span",{class:"line-number"},"67"),p("br"),p("span",{class:"line-number"},"68"),p("br"),p("span",{class:"line-number"},"69"),p("br"),p("span",{class:"line-number"},"70"),p("br"),p("span",{class:"line-number"},"71"),p("br"),p("span",{class:"line-number"},"72"),p("br"),p("span",{class:"line-number"},"73"),p("br"),p("span",{class:"line-number"},"74"),p("br"),p("span",{class:"line-number"},"75"),p("br"),p("span",{class:"line-number"},"76"),p("br"),p("span",{class:"line-number"},"77"),p("br"),p("span",{class:"line-number"},"78"),p("br"),p("span",{class:"line-number"},"79"),p("br"),p("span",{class:"line-number"},"80"),p("br"),p("span",{class:"line-number"},"81"),p("br"),p("span",{class:"line-number"},"82"),p("br"),p("span",{class:"line-number"},"83"),p("br"),p("span",{class:"line-number"},"84"),p("br"),p("span",{class:"line-number"},"85"),p("br"),p("span",{class:"line-number"},"86"),p("br"),p("span",{class:"line-number"},"87"),p("br"),p("span",{class:"line-number"},"88"),p("br"),p("span",{class:"line-number"},"89"),p("br"),p("span",{class:"line-number"},"90"),p("br"),p("span",{class:"line-number"},"91"),p("br"),p("span",{class:"line-number"},"92"),p("br"),p("span",{class:"line-number"},"93"),p("br"),p("span",{class:"line-number"},"94"),p("br"),p("span",{class:"line-number"},"95"),p("br"),p("span",{class:"line-number"},"96"),p("br"),p("span",{class:"line-number"},"97"),p("br"),p("span",{class:"line-number"},"98"),p("br"),p("span",{class:"line-number"},"99"),p("br"),p("span",{class:"line-number"},"100"),p("br"),p("span",{class:"line-number"},"101"),p("br"),p("span",{class:"line-number"},"102"),p("br"),p("span",{class:"line-number"},"103"),p("br"),p("span",{class:"line-number"},"104"),p("br"),p("span",{class:"line-number"},"105"),p("br"),p("span",{class:"line-number"},"106"),p("br"),p("span",{class:"line-number"},"107"),p("br"),p("span",{class:"line-number"},"108"),p("br"),p("span",{class:"line-number"},"109"),p("br"),p("span",{class:"line-number"},"110"),p("br"),p("span",{class:"line-number"},"111"),p("br"),p("span",{class:"line-number"},"112"),p("br"),p("span",{class:"line-number"},"113"),p("br"),p("span",{class:"line-number"},"114"),p("br"),p("span",{class:"line-number"},"115"),p("br"),p("span",{class:"line-number"},"116"),p("br"),p("span",{class:"line-number"},"117"),p("br"),p("span",{class:"line-number"},"118"),p("br"),p("span",{class:"line-number"},"119"),p("br"),p("span",{class:"line-number"},"120"),p("br"),p("span",{class:"line-number"},"121"),p("br"),p("span",{class:"line-number"},"122"),p("br"),p("span",{class:"line-number"},"123"),p("br"),p("span",{class:"line-number"},"124"),p("br"),p("span",{class:"line-number"},"125"),p("br"),p("span",{class:"line-number"},"126"),p("br"),p("span",{class:"line-number"},"127"),p("br"),p("span",{class:"line-number"},"128"),p("br"),p("span",{class:"line-number"},"129"),p("br"),p("span",{class:"line-number"},"130"),p("br"),p("span",{class:"line-number"},"131"),p("br"),p("span",{class:"line-number"},"132"),p("br"),p("span",{class:"line-number"},"133"),p("br"),p("span",{class:"line-number"},"134"),p("br"),p("span",{class:"line-number"},"135"),p("br"),p("span",{class:"line-number"},"136"),p("br"),p("span",{class:"line-number"},"137"),p("br"),p("span",{class:"line-number"},"138"),p("br"),p("span",{class:"line-number"},"139"),p("br"),p("span",{class:"line-number"},"140"),p("br"),p("span",{class:"line-number"},"141"),p("br"),p("span",{class:"line-number"},"142"),p("br"),p("span",{class:"line-number"},"143"),p("br"),p("span",{class:"line-number"},"144"),p("br"),p("span",{class:"line-number"},"145"),p("br")])])],-1),B=l('',5),Y=l('',8);A.render=function(n,p,t,l,c,r){const u=e("Show"),i=e("Play");return s(),a("div",null,[T,o(u),V,z,E,S,C,o(i,{algorithm:r.exhaust,speed:80},null,8,["algorithm"]),I,L,j,o(i,{algorithm:r.divide,speed:125},null,8,["algorithm"]),D,o(i,{algorithm:r.jarvis,speed:125},null,8,["algorithm"]),q,o(i,{algorithm:r.graham,speed:125},null,8,["algorithm"]),O,B,o(i,{algorithm:r.melkman,speed:250},null,8,["algorithm"]),Y])};export{M as __pageData,A as default};
