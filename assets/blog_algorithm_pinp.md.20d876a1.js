import{e,f as t,g as l,o as a,c as r,a as n,t as i,F as s,d as o,r as h,b as d}from"./app.7ffc70b8.js";const u=e=>{e.clearRect(0,0,320,320)},c=(e,t)=>{u(e),e.beginPath();let l=t[0];e.moveTo(l.x,l.y);for(let a=1,r=t.length;a<r;a++)l=t[a],e.lineTo(l.x,l.y);e.closePath(),e.strokeStyle="green",e.fillStyle="rgb(0,255,0,0.1)",e.stroke(),e.fill()};var g={setup(){const a=e(),r=e(),n=e();let i,s,o;const h=[],d=e=>{const t={x:e.pageX-o.x,y:e.pageY-o.y};r.value?(n.value=(({x:e,y:t},l)=>{let a=!1;for(let r=l.length,n=0;r--;n=r){const{x:i,y:s}=l[r],{x:o,y:h}=l[n];if(e===i&&t===s||e===o&&t===h)return!0;if(t>=s&&t<=h||t<=s&&t>=h){const l=i+(t-s)*(o-i)/(h-s);if(l===e)return!0;l>e&&(a=!a)}}return a})(t,h),c(s,h),((e,t)=>{e.fillStyle="red",e.fillRect(t.x-1,t.y-1,2,2)})(s,t)):(n.value=null,h.push(t),c(s,h))},g=e=>{!r.value&&h.length&&c(s,h.concat({x:e.pageX-o.x,y:e.pageY-o.y}))},v=()=>{r.value=!1,n.value=null,h.splice(0),u(s)},f=()=>{r.value?v():h.length>2&&(r.value=!0,c(s,h))},p=e=>{f(),e.stopPropagation(),e.preventDefault()};return t((()=>{i=a.value,s=i.getContext("2d"),o=i.getBoundingClientRect(),i.addEventListener("click",d),i.addEventListener("mousemove",g),i.addEventListener("contextmenu",p)})),l((()=>{i.removeEventListener("click",d),i.removeEventListener("mousemove",g),i.removeEventListener("contextmenu",p)})),{el:a,isPoint:r,result:n,toggle:f,clear:v}}};const v={ref:"el",width:"320",height:"320",style:{border:"1px solid",cursor:"crosshair"}},f=o(" 计算结果: ");g.render=function(e,t,l,o,h,d){return a(),r(s,null,[n("canvas",v,null,512),n("i",{onClick:t[1]||(t[1]=(...e)=>o.toggle&&o.toggle(...e)),style:{margin:"10px"}},i(o.isPoint?"请指定点":"正在绘制多边形")+"(右键切换) ",1),n("i",{onClick:t[2]||(t[2]=(...e)=>o.clear&&o.clear(...e))},"清空"),n("p",null,[f,n("b",{style:"color: "+(o.result?"green":!1===o.result?"red":"")},i(o.result?"点在面内(或边上)":!1===o.result?"点在面外":"--"),5)])],64)};var p={components:{PinP:g}};const x='{"title":"点在面内","description":"","frontmatter":{"title":"点在面内","index":1},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"演示","slug":"演示"},{"level":2,"title":"方法介绍","slug":"方法介绍"},{"level":3,"title":"面积和","slug":"面积和"},{"level":3,"title":"夹角和","slug":"夹角和"},{"level":3,"title":"回转数","slug":"回转数"},{"level":3,"title":"射线法","slug":"射线法"},{"level":2,"title":"射线法实现","slug":"射线法实现"},{"level":2,"title":"升维","slug":"升维"}],"relativePath":"blog/algorithm/pinp.md","lastUpdated":1618506652595}',m=n("h2",{id:"问题描述"},[n("a",{class:"header-anchor",href:"#问题描述","aria-hidden":"true"},"#"),o(" 问题描述")],-1),y=n("p",null,"平面上有一个任意多边形(包括凹凸岛洞交错等), 指定任意平面点, 求该点是否在该多边形内",-1),P=n("h2",{id:"演示"},[n("a",{class:"header-anchor",href:"#演示","aria-hidden":"true"},"#"),o(" 演示")],-1),_=d('<h2 id="方法介绍"><a class="header-anchor" href="#方法介绍" aria-hidden="true">#</a> 方法介绍</h2><h3 id="面积和"><a class="header-anchor" href="#面积和" aria-hidden="true">#</a> 面积和</h3><h3 id="夹角和"><a class="header-anchor" href="#夹角和" aria-hidden="true">#</a> 夹角和</h3><h3 id="回转数"><a class="header-anchor" href="#回转数" aria-hidden="true">#</a> 回转数</h3><h3 id="射线法"><a class="header-anchor" href="#射线法" aria-hidden="true">#</a> 射线法</h3><h2 id="射线法实现"><a class="header-anchor" href="#射线法实现" aria-hidden="true">#</a> 射线法实现</h2><h2 id="升维"><a class="header-anchor" href="#升维" aria-hidden="true">#</a> 升维</h2><p>在3D场景中要如何实现？</p>',8);p.render=function(e,t,l,i,s,o){const d=h("PinP");return a(),r("div",null,[m,y,P,n(d),_])};export default p;export{x as __pageData};
