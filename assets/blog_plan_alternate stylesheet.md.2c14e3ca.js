import{o as e,c as l,b as t}from"./app.f71ae3c3.js";const a='{"title":"一种基于 alternate stylesheet 的整站换肤方案","description":"","frontmatter":{"title":"一种基于 alternate stylesheet 的整站换肤方案","index":1},"headers":[{"level":2,"title":"背景","slug":"背景"},{"level":2,"title":"换肤方案","slug":"换肤方案"},{"level":2,"title":"alternate stylesheet","slug":"alternate-stylesheet"},{"level":2,"title":"目标","slug":"目标"},{"level":2,"title":"实现思路","slug":"实现思路"},{"level":2,"title":"具体实现","slug":"具体实现"}],"relativePath":"blog/plan/alternate stylesheet.md","lastUpdated":1624383152469}',s={},r=t('<p><em>2021-06-15</em></p><h2 id="背景"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>有时候需要网站能换肤, 嗯, 就酱</p><h2 id="换肤方案"><a class="header-anchor" href="#换肤方案" aria-hidden="true">#</a> 换肤方案</h2><p>换肤有两种应用场景, 一种是构建时生成单个指定皮肤, 一种是运行时切换皮肤</p><p>TODO: 来个表格 样式覆盖(根元素加class, css优先级) css变量 alternate stylesheet 其它略(less <code>&lt;style</code> <code>&lt;link</code>)</p><h2 id="alternate-stylesheet"><a class="header-anchor" href="#alternate-stylesheet" aria-hidden="true">#</a> alternate stylesheet</h2><p>它是 <a href="https://www.w3.org/TR/html401/present/styles.html#h-14.3" target="_blank" rel="noopener noreferrer">HTML 4.01 规范</a> 中的内容, 允许切换网页使用的样式表, 详情请<a href="https://developer.mozilla.org/docs/Web/CSS/Alternative_style_sheets" target="_blank" rel="noopener noreferrer">访问MDN</a>, 浏览器兼容性还不错, 完全可以在生产环境使用</p><h2 id="目标"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>TODO: 来个表格</p><ol><li>整站换肤</li><li>易开发易维护降成本</li></ol><ul><li>默认自动注入皮肤变量同时生成多套可运行时切换的皮肤</li><li>支持异步chunk</li><li>css module / css object (<code>import STYLE from &#39;*.scss&#39;</code>) 支持</li><li>细粒度特殊处理支持: 允许指定注入的变量 &amp; 允许随皮肤切换样式和其他</li><li>易于开发调试</li></ul><ol start="3"><li>良好的扩展性 (用户定制)</li><li>无缝(刷新)切换/懒加载/预加载/按需加载皮肤</li></ol><h2 id="实现思路"><a class="header-anchor" href="#实现思路" aria-hidden="true">#</a> 实现思路</h2><p>TODO: 来个表格</p><ol><li>alternate stylesheet</li><li>scss/less... vars + webpack插件</li></ol><ul><li>loader 配置全局变量</li><li>runtime代码广播换肤事件(可自定义), 维护当前皮肤状态(全局变量, 可自定义)以待获取 (比如异步chunk)</li><li>搜集构建信息, 根据当前皮肤提供接口更新css object(如使用vue reactivity劫持下 可做到比如维护一套变量控制包括echarts在内的皮肤及切换)</li><li>提供接口, 构建时处理</li><li>支持热更新, 但暂不支持开发环境切换皮肤(style标签, 支持成本大, 要么丢热更新, 要么改style标签内容, 这都可以做成另一种换肤方案了), 支持使用指定皮肤(命令行参数)启动开发环境</li><li>暂不支持 css-in-js (styled-component 等)</li></ul><ol start="3"><li>可支持 css var、在线打包、上传css</li><li><code>&lt;link rel=&quot;preload/prefetch&quot;</code></li></ol><h2 id="具体实现"><a class="header-anchor" href="#具体实现" aria-hidden="true">#</a> 具体实现</h2><p>TODO: api/规范 + 工程化</p>',20);s.render=function(t,a,s,i,h,o){return e(),l("div",null,[r])};export default s;export{a as __pageData};
