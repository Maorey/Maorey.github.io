import{o as n,c as s,a,r as t,d as p,b as e}from"./app.b941b070.js";import{S as o}from"./canvas.module.1cb43611.js";var l={setup(){}};const c={width:"320",height:"320"};l.render=function(a,t,p,e,o,l){return n(),s("canvas",c)};const r=(n,s,a="red",t=4)=>{let p=s&&s.length;if(p){n.fillStyle=a;const e=t>>1;let o;for(;p--;)o=s[p],n.fillRect(o.x-e,o.y-e,t,t)}},i=(n,s,a="green",t)=>{let p=s.length,e=s[--p];for(n.beginPath(),n.moveTo(e.x,e.y);p;)e=s[--p],n.lineTo(e.x,e.y);t&&n.closePath(),n.strokeStyle=a,n.stroke()},u=(n,s,a)=>{n.clearRect(0,0,320,320),r(n,s);let t=a&&a.length;if(t){let s=a[t-1];if(Array.isArray(s))for(a.done||(r(n,s,"green",6),i(n,s,"red"),t--);t;)i(n,a[--t]);else a.done||(r(n,[s],"green",6),--t&&i(n,[s,a[t-1]],"red"),a=a.slice(0,t)),i(n,a,"green",a.done)}};var k={props:{algorithm:Function,speed:Number},setup(n){const s=[];let a,t=!1;return{STYLE:o,async run(){if(t=!1,a&&s.length)for await(const p of function*(n,s,a){const t=n(s);let p;do{p=t.next(),yield new Promise((n=>{const s=p.value;s.done=p.done,setTimeout((()=>{n(s)}),a)}))}while(!p.done)}(n.algorithm,s,n.speed)){if(t)return;u(a,s,p)}},clear(){t=!0,s.splice(0),a&&u(a)},onClick(n){t=!0;const p=n.target;a=p.getContext("2d"),s.push({x:n.pageX-p.offsetLeft,y:n.pageY-p.offsetTop}),u(a,s)}}}};const m=a("br",null,null,-1),b=a("br",null,null,-1);k.render=function(t,p,e,o,l,c){return n(),s("div",{class:o.STYLE.wrap},[m,a("i",{onClick:p[1]||(p[1]=(...n)=>o.run&&o.run(...n))},"生成最小凸包"),a("i",{onClick:p[2]||(p[2]=(...n)=>o.clear&&o.clear(...n))},"重置"),a("canvas",{width:"320",height:"320",onClick:p[3]||(p[3]=(...n)=>o.onClick&&o.onClick(...n))}),b],2)};function*d(n,s,a,t,p){const{x:e,y:o}=s,l=a.x-e,c=a.y-o,r=[];let i,u=0;const{x:k,y:m}=a,b=t.x-k,h=t.y-m,y=[];let g,w,f,v=0,x=n.length;for(;x;)w=n[--x],f=l*(w.y-o)-(w.x-e)*c,f>0?(yield p.concat(a,w),r.push(w),f>u&&(u=f,i=w)):(f=b*(w.y-m)-(w.x-k)*h,f>0&&(yield p.concat(t,w),y.push(w),f>v&&(v=f,g=w)));return i&&(yield*d(r,s,i,a,p)),p.push(a),g&&(yield*d(y,a,g,t,p)),p}const h=(n,s)=>n===s||n.x===s.x&&n.y===s.y;function y(n,s,a){let t,p=0,e=s.length;for(;p<e;)t=p+e>>1,a(s[t],n)?e=t-1:p=t+1;for(t=s.length;t>p;)s[t]=s[--t];s[p]=n}var g={components:{Show:l,Play:k},methods:{exhaust:function*(n){const s=n.length;if(s<4)return n;const a=[];let t=s;for(;t;){const p=n[--t],{x:e,y:o}=p;let l=t;for(;l;){const c=n[--l],r=c.x-e,i=c.y-o;let u=null,k=s;for(;k;){if(--k===t||k===l)continue;const s=n[k];yield a.concat([[p,c,s]]);const m=r*(s.y-o)>(s.x-e)*i;if(null===u)u=m;else if(m!==u){u=null;break}}null!==u&&(a.push([p,c]),yield a)}}return a},divide:function*(n){const s=n.length;if(s<4)return n;let a,t,p,e=s;for(;e;)p=n[--e],(!a||a.x>p.x)&&(a=p),(!t||t.x<p.x)&&(t=p);const{x:o,y:l}=a,c=t.x-o,r=t.y-l;let i,u,k=0,m=0;const b=[],h=[];let y;for(e=s;e;)p=n[--e],yield[a,t,p],y=c*(p.y-l)-(p.x-o)*r,y>0?(b.push(p),y>k&&(k=y,i=p)):y<0&&(h.push(p),y<m&&(m=y,u=p));if(a===t)return[i,u];if(i===u)return[a,t];const g=[a];return i&&(yield*d(b,a,i,t,g)),g.push(t),u&&(yield*d(h,t,u,a,g)),g},jarvis:function*(n){const s=n.length;if(s<4)return n;let a,t,p=s;for(;p;)t=n[--p],(!a||t.x<a.x||t.x===a.x&&t.y<a.y)&&(a=t);const e=[a];let o,l,c,r,i,u,k=0;for(p=s;p;)if(t=n[--p],o=e[k],!h(t,o)){for(e.push(t),k++,l=o.x,c=o.y,r=t.x-l,i=t.y-c,u=s;u;)t=n[--u],yield e.concat(t),r*(t.y-c)<(t.x-l)*i&&(e[k]=t,r=t.x-l,i=t.y-c);if(h(e[k],a)){e.pop();break}}return e},graham:function*(n){let s,a,t=n.length;if(t<4)return n;for(;t;)a=n[--t],(!s||a.x<s.x||a.x===s.x&&a.y<s.y)&&(s=a);const p=[s];let e,o,l=1;for(n=function(n,s){const a=[],t=new WeakMap,p=n=>{let a=t.get(n);if(!a){const p=((s.x-n.x)**2+(s.y-n.y)**2)**.5;a=[(n.y-s.y)/p,p],t.set(n,a)}return a},e=(n,s)=>{const a=p(n),t=p(s);return a[0]===t[0]?a[1]<t[1]:a[0]<t[0]};let o=n.length;for(;o;)(l=n[--o])===(c=s)||l.x===c.x&&l.y===c.y||y(n[o],a,e);var l,c;return a}(n,s),t=n.length,t&&p.push(n[--t]),yield p;t;){if(a=n[t-1],yield p.concat(a),t<2){p.push(a);break}e=p[l-1],o=p[l],(o.x-e.x)*(a.y-e.y)<(a.x-e.x)*(o.y-e.y)?(p.pop(),l--):(p.push(a),l++,t--)}return p}}};const w='{"title":"最小凸包","description":"","frontmatter":{"title":"最小凸包","index":3},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"演示","slug":"演示"},{"level":2,"title":"前置知识","slug":"前置知识"},{"level":2,"title":"方法介绍","slug":"方法介绍"},{"level":3,"title":"穷举法 (O(n))","slug":"穷举法-o-n3"},{"level":3,"title":"分治法 (快包 O(n㏒n))","slug":"分治法-快包-o-n㏒n"},{"level":3,"title":"Jarvis 步进法 (O(nH))","slug":"jarvis-步进法-o-nh"},{"level":3,"title":"Graham 扫描法 (O(n㏒n)) [^GrahamScan]","slug":"graham-扫描法-o-n㏒n"},{"level":3,"title":"Melkman 算法 (O(n))","slug":"melkman-算法-o-n"},{"level":2,"title":"升维","slug":"升维"},{"level":2,"title":"参考链接","slug":"参考链接"}],"relativePath":"blog/algorithm/melkman.md","lastUpdated":1623263509819}',f=a("p",null,"2021-06-11",-1),v=a("h2",{id:"问题描述"},[a("a",{class:"header-anchor",href:"#问题描述","aria-hidden":"true"},"#"),p(" 问题描述")],-1),x=a("p",null,"平面上任意位置有3个及以上的点, 求这些点的最小外接凸多边形",-1),P=a("h2",{id:"演示"},[a("a",{class:"header-anchor",href:"#演示","aria-hidden":"true"},"#"),p(" 演示")],-1),_=e('',6),M=a("ol",null,[a("li",null,[p("从点集里取出一点"),a("strong",null,"A"),p(", 与剩下的点"),a("strong",null,"B"),p("依次连接, 得到一条直线"),a("strong",null,"L"),p("([A, B]) (共 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mo",null,"∑"),a("mstyle",{scriptlevel:"1"},[a("mtable",{rowspacing:"0.1000em",columnalign:"center",columnspacing:"1em"},[a("mtr",null,[a("mtd",null,[a("mstyle",{scriptlevel:"1",displaystyle:"false"},[a("mrow",null,[a("mn",null,"1"),a("mo",null,"<"),a("mi",null,"i"),a("mo",null,"<"),a("mi",null,"n"),a("mo",null,"−"),a("mn",null,"1")])])])])])])])]),a("annotation",{encoding:"application/x-tex"},"\\sum_{\\substack{1 < i < n - 1}}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1.168542em","vertical-align":"-0.418542em"}}),a("span",{class:"mop"},[a("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"-0.0000050000000000050004em"}},"∑"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.16912199999999994em"}},[a("span",{style:{top:"-2.40029em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mtable"},[a("span",{class:"col-align-c"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.66976em"}},[a("span",{style:{top:"-2.71024em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},"1"),a("span",{class:"mrel mtight"},"<"),a("span",{class:"mord mathnormal mtight"},"i"),a("span",{class:"mrel mtight"},"<"),a("span",{class:"mord mathnormal mtight"},"n"),a("span",{class:"mbin mtight"},"−"),a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.16976em"}},[a("span")])])])])])])])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.418542em"}},[a("span")])])])])])])])]),p(" 条)")]),a("li",null,[p("判断其他点是否都在这条直线"),a("strong",null,"L"),p("的同一侧 (共 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n"),a("mo",null,"−"),a("mn",null,"2")]),a("annotation",{encoding:"application/x-tex"},"n - 2")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222222222222222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.64444em","vertical-align":"0em"}}),a("span",{class:"mord"},"2")])])]),p(" 个), 是则将"),a("strong",null,"L"),p("加入边数组")]),a("li",null,[p("[按需] 将边数组转换为点数组 (将点按顺时针/逆时针排序同时去重, "),a("code",null,"O(n)"),p("因为数组里的边总是相邻的)")])],-1),T=a("h4",{id:"演示-1"},[a("a",{class:"header-anchor",href:"#演示-1","aria-hidden":"true"},"#"),p(" 演示")],-1),A=e('',8),z=a("ol",null,[a("li",null,[p("找到x极值点"),a("strong",null,"p0"),p("和"),a("strong",null,"p1"),p(", 线段"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mover",{accent:"true"},[a("mrow",null,[a("msub",null,[a("mi",null,"p"),a("mn",null,"0")]),a("msub",null,[a("mi",null,"p"),a("mn",null,"1")])]),a("mo",{stretchy:"true"},"‾")])]),a("annotation",{encoding:"application/x-tex"},"\\overline{p_0p_1}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),a("span",{class:"mord overline"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.63056em"}},[a("span",{style:{top:"-3em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"0")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])]),a("span",{style:{top:"-3.55056em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.19444em"}},[a("span")])])])])])])]),p("将点集划分为两个部分, 称作"),a("strong",null,"上包"),p("和"),a("strong",null,"下包")]),a("li",null,[p("在"),a("strong",null,"上包"),p("中找到离"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mover",{accent:"true"},[a("mrow",null,[a("msub",null,[a("mi",null,"p"),a("mn",null,"0")]),a("msub",null,[a("mi",null,"p"),a("mn",null,"1")])]),a("mo",{stretchy:"true"},"‾")])]),a("annotation",{encoding:"application/x-tex"},"\\overline{p_0p_1}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),a("span",{class:"mord overline"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.63056em"}},[a("span",{style:{top:"-3em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"0")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])]),a("span",{style:{top:"-3.55056em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.19444em"}},[a("span")])])])])])])]),p("最远的点"),a("strong",null,"p2"),p(", 使用线段"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mover",{accent:"true"},[a("mrow",null,[a("msub",null,[a("mi",null,"p"),a("mn",null,"2")]),a("msub",null,[a("mi",null,"p"),a("mn",null,"0")])]),a("mo",{stretchy:"true"},"‾")])]),a("annotation",{encoding:"application/x-tex"},"\\overline{p_2p_0}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),a("span",{class:"mord overline"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.63056em"}},[a("span",{style:{top:"-3em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"0")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])]),a("span",{style:{top:"-3.55056em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.19444em"}},[a("span")])])])])])])]),p(" 和 线段"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mover",{accent:"true"},[a("mrow",null,[a("msub",null,[a("mi",null,"p"),a("mn",null,"1")]),a("msub",null,[a("mi",null,"p"),a("mn",null,"2")])]),a("mo",{stretchy:"true"},"‾")])]),a("annotation",{encoding:"application/x-tex"},"\\overline{p_1p_2}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.825em","vertical-align":"-0.19444em"}}),a("span",{class:"mord overline"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.63056em"}},[a("span",{style:{top:"-3em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"1")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"p"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.30110799999999993em"}},[a("span",{style:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])])])]),a("span",{style:{top:"-3.55056em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.19444em"}},[a("span")])])])])])])]),p(" 继续对上包进行划分, 对得到的 "),a("strong",null,"上包左上"),p(" 和 "),a("strong",null,"上包右上"),p(" 继续执行第"),a("strong",null,"2"),p("步, 直到无法继续划分(上包为空)")]),a("li",null,[p("对"),a("strong",null,"下包"),p("也做与"),a("strong",null,"第2步"),p("相似的操作")])],-1),E=a("h4",{id:"演示-2"},[a("a",{class:"header-anchor",href:"#演示-2","aria-hidden":"true"},"#"),p(" 演示")],-1),S=e('',8),I=e('',7),C=a("details",null,[a("summary",null,"推导及代码实现"),a("p",null,[p("其他点与起点的幅角范围为 [0, 180°], 使用"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"cos"),a("mo",null,"⁡")]),a("annotation",{encoding:"application/x-tex"},"\\cos")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),a("span",{class:"mop"},"cos")])])]),p("函数即可排序幅角, 同时可计算出距离")]),a("div",{class:"language-ts line-numbers-mode"},[a("pre",null,[a("code",null,[a("span",{class:"token keyword"},"import"),p(),a("span",{class:"token keyword"},"type"),p(),a("span",{class:"token punctuation"},"{"),p(" Point"),a("span",{class:"token punctuation"},","),p(" Algorithm "),a("span",{class:"token punctuation"},"}"),p(),a("span",{class:"token keyword"},"from"),p(),a("span",{class:"token string"},"'./types'"),p("\n\n"),a("span",{class:"token keyword"},"const"),p(),a("span",{class:"token function-variable function"},"isPointEqual"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"("),p("a"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},","),p(" b"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"=>"),p(" a "),a("span",{class:"token operator"},"==="),p(" b "),a("span",{class:"token operator"},"||"),p(),a("span",{class:"token punctuation"},"("),p("a"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"==="),p(" b"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"&&"),p(" a"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"==="),p(" b"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),p("\n\n"),a("span",{class:"token comment"},"/** [稳定] 将 point 插入 points\n * @param point\n * @param points\n * @param compare 比较方法 返回 true: element > point\n */"),p("\n"),a("span",{class:"token keyword"},"function"),p(),a("span",{class:"token function"},"insert"),a("span",{class:"token punctuation"},"("),p("\n  point"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},","),p("\n  points"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),p("\n  "),a("span",{class:"token function-variable function"},"compare"),a("span",{class:"token operator"},":"),p(),a("span",{class:"token punctuation"},"("),p("element"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},","),p(" point"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"=>"),p(),a("span",{class:"token builtin"},"boolean"),p("\n"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n  "),a("span",{class:"token comment"},"// 二分查找 [low, high)"),p("\n  "),a("span",{class:"token keyword"},"let"),p(" low "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token number"},"0"),p("\n  "),a("span",{class:"token keyword"},"let"),p(" high "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"."),p("length\n  "),a("span",{class:"token keyword"},"let"),p(" i"),a("span",{class:"token operator"},":"),p(),a("span",{class:"token builtin"},"number"),p("\n  "),a("span",{class:"token keyword"},"while"),p(),a("span",{class:"token punctuation"},"("),p("low "),a("span",{class:"token operator"},"<"),p(" high"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    i "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"("),p("low "),a("span",{class:"token operator"},"+"),p(" high"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},">>"),p(),a("span",{class:"token number"},"1"),p(),a("span",{class:"token comment"},"// 除2并向下取整"),p("\n    "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),a("span",{class:"token function"},"compare"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},"["),p("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),p(" point"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n      high "),a("span",{class:"token operator"},"="),p(" i "),a("span",{class:"token operator"},"-"),p(),a("span",{class:"token number"},"1"),p("\n    "),a("span",{class:"token punctuation"},"}"),p(),a("span",{class:"token keyword"},"else"),p(),a("span",{class:"token punctuation"},"{"),p("\n      low "),a("span",{class:"token operator"},"="),p(" i "),a("span",{class:"token operator"},"+"),p(),a("span",{class:"token number"},"1"),p("\n    "),a("span",{class:"token punctuation"},"}"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token comment"},"// 插入"),p("\n  "),a("span",{class:"token comment"},"// points.splice(low, 0, point)"),p("\n  i "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"."),p("length\n  "),a("span",{class:"token keyword"},"while"),p(),a("span",{class:"token punctuation"},"("),p("i "),a("span",{class:"token operator"},">"),p(" low"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    points"),a("span",{class:"token punctuation"},"["),p("i"),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"--"),p("i"),a("span",{class:"token punctuation"},"]"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n  points"),a("span",{class:"token punctuation"},"["),p("low"),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"="),p(" point\n"),a("span",{class:"token punctuation"},"}"),p("\n"),a("span",{class:"token comment"},"/** 将点集按与 start→x轴正向 的幅角 排序 (幅角相等按距离)\n * @param points\n * @param start\n * @returns\n */"),p("\n"),a("span",{class:"token keyword"},"function"),p(),a("span",{class:"token function"},"sortPoints"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),p(" start"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n  "),a("span",{class:"token keyword"},"const"),p(" result"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),p("\n\n  "),a("span",{class:"token comment"},"/** 缓存点与起点的角度、距离 */"),p("\n  "),a("span",{class:"token keyword"},"const"),p(" cache "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token keyword"},"new"),p(),a("span",{class:"token class-name"},[p("WeakMap"),a("span",{class:"token operator"},"<"),p("Point"),a("span",{class:"token punctuation"},","),p(),a("span",{class:"token punctuation"},"["),a("span",{class:"token comment"},"/** angle */"),p(),a("span",{class:"token builtin"},"number"),a("span",{class:"token punctuation"},","),p(),a("span",{class:"token comment"},"/** distance */"),p(),a("span",{class:"token builtin"},"number"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token operator"},">")]),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),p("\n  "),a("span",{class:"token keyword"},"const"),p(),a("span",{class:"token function-variable function"},"getInfo"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"=>"),p(),a("span",{class:"token punctuation"},"{"),p("\n    "),a("span",{class:"token keyword"},"let"),p(" info "),a("span",{class:"token operator"},"="),p(" cache"),a("span",{class:"token punctuation"},"."),a("span",{class:"token keyword"},"get"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},")"),p("\n    "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),p("info"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n      "),a("span",{class:"token keyword"},"const"),p(" distance "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),p("start"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"-"),p(" point"),a("span",{class:"token punctuation"},"."),p("x"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"**"),p(),a("span",{class:"token number"},"2"),p(),a("span",{class:"token operator"},"+"),p(),a("span",{class:"token punctuation"},"("),p("start"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"-"),p(" point"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"**"),p(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"**"),p(),a("span",{class:"token number"},"0.5"),p("\n      info "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"-"),p(" start"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"/"),p(" distance"),a("span",{class:"token punctuation"},","),p(" distance"),a("span",{class:"token punctuation"},"]"),p("\n      cache"),a("span",{class:"token punctuation"},"."),a("span",{class:"token keyword"},"set"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},","),p(" info"),a("span",{class:"token punctuation"},")"),p("\n    "),a("span",{class:"token punctuation"},"}"),p("\n\n    "),a("span",{class:"token keyword"},"return"),p(" info\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"const"),p(),a("span",{class:"token function-variable function"},"compare"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"("),p("element"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},","),p(" point"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"=>"),p(),a("span",{class:"token punctuation"},"{"),p("\n    "),a("span",{class:"token keyword"},"const"),p(" elementInfo "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token function"},"getInfo"),a("span",{class:"token punctuation"},"("),p("element"),a("span",{class:"token punctuation"},")"),p("\n    "),a("span",{class:"token keyword"},"const"),p(" pointInfo "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token function"},"getInfo"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},")"),p("\n\n    "),a("span",{class:"token keyword"},"return"),p(" elementInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"==="),p(" pointInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),p("\n      "),a("span",{class:"token operator"},"?"),p(" elementInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"<"),p(" pointInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),p("\n      "),a("span",{class:"token operator"},":"),p(" elementInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"<"),p(" pointInfo"),a("span",{class:"token punctuation"},"["),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},"]"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"let"),p(" i "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"."),p("length\n  "),a("span",{class:"token keyword"},"while"),p(),a("span",{class:"token punctuation"},"("),p("i"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    "),a("span",{class:"token function"},"isPointEqual"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"--"),p("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),p(" start"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"||"),p(),a("span",{class:"token function"},"insert"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},"["),p("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},","),p(" result"),a("span",{class:"token punctuation"},","),p(" compare"),a("span",{class:"token punctuation"},")"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"return"),p(" result\n"),a("span",{class:"token punctuation"},"}"),p("\n\n"),a("span",{class:"token comment"},"/** graham扫描法求最小凸包 使用canvas坐标系, 如下\no——→ x\n|\n↓\ny\n*/"),p("\n"),a("span",{class:"token keyword"},"const"),p(" graham"),a("span",{class:"token operator"},":"),p(),a("span",{class:"token function-variable function"},"Algorithm"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token keyword"},"function"),a("span",{class:"token operator"},"*"),p(),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n  "),a("span",{class:"token keyword"},"let"),p(" i "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"."),p("length\n  "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),p("i "),a("span",{class:"token operator"},"<"),p(),a("span",{class:"token number"},"4"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    "),a("span",{class:"token keyword"},"return"),p(" points\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"let"),p(" start"),a("span",{class:"token operator"},"!"),a("span",{class:"token operator"},":"),p(" Point\n\n  "),a("span",{class:"token keyword"},"let"),p(" point"),a("span",{class:"token operator"},":"),p(" Point\n  "),a("span",{class:"token keyword"},"while"),p(),a("span",{class:"token punctuation"},"("),p("i"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    point "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"--"),p("i"),a("span",{class:"token punctuation"},"]"),p("\n\n    "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"!"),p("start "),a("span",{class:"token operator"},"||"),p(" point"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"<"),p(" start"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"||"),p(),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"==="),p(" start"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"&&"),p(" point"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"<"),p(" start"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n      start "),a("span",{class:"token operator"},"="),p(" point\n    "),a("span",{class:"token punctuation"},"}"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"const"),p(" result"),a("span",{class:"token operator"},":"),p(" Point"),a("span",{class:"token punctuation"},"["),a("span",{class:"token punctuation"},"]"),p(),a("span",{class:"token operator"},"="),p(),a("span",{class:"token punctuation"},"["),p("start"),a("span",{class:"token punctuation"},"]"),p("\n\n  "),a("span",{class:"token keyword"},"let"),p(" pointer "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token number"},"1"),p(),a("span",{class:"token comment"},"// 栈顶"),p("\n  "),a("span",{class:"token keyword"},"let"),p(" startPoint"),a("span",{class:"token operator"},":"),p(" Point\n  "),a("span",{class:"token keyword"},"let"),p(" endPoint"),a("span",{class:"token operator"},":"),p(" Point\n  points "),a("span",{class:"token operator"},"="),p(),a("span",{class:"token function"},"sortPoints"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},","),p(" start"),a("span",{class:"token punctuation"},")"),p("\n  i "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"."),p("length\n  i "),a("span",{class:"token operator"},"&&"),p(" result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"push"),a("span",{class:"token punctuation"},"("),p("points"),a("span",{class:"token punctuation"},"["),a("span",{class:"token operator"},"--"),p("i"),a("span",{class:"token punctuation"},"]"),a("span",{class:"token punctuation"},")"),p("\n  "),a("span",{class:"token keyword"},"yield"),p(" result\n  "),a("span",{class:"token keyword"},"while"),p(),a("span",{class:"token punctuation"},"("),p("i"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n    point "),a("span",{class:"token operator"},"="),p(" points"),a("span",{class:"token punctuation"},"["),p("i "),a("span",{class:"token operator"},"-"),p(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),p("\n    "),a("span",{class:"token keyword"},"yield"),p(" result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"concat"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},")"),p("\n    "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),p("i "),a("span",{class:"token operator"},"<"),p(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n      result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"push"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},")"),p("\n      "),a("span",{class:"token keyword"},"break"),p("\n    "),a("span",{class:"token punctuation"},"}"),p("\n\n    startPoint "),a("span",{class:"token operator"},"="),p(" result"),a("span",{class:"token punctuation"},"["),p("pointer "),a("span",{class:"token operator"},"-"),p(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},"]"),p("\n    endPoint "),a("span",{class:"token operator"},"="),p(" result"),a("span",{class:"token punctuation"},"["),p("pointer"),a("span",{class:"token punctuation"},"]"),p("\n\n    "),a("span",{class:"token keyword"},"if"),p(),a("span",{class:"token punctuation"},"("),p("\n      "),a("span",{class:"token punctuation"},"("),p("endPoint"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"-"),p(" startPoint"),a("span",{class:"token punctuation"},"."),p("x"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"*"),p(),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"-"),p(" startPoint"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"<"),p("\n      "),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},"."),p("x "),a("span",{class:"token operator"},"-"),p(" startPoint"),a("span",{class:"token punctuation"},"."),p("x"),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token operator"},"*"),p(),a("span",{class:"token punctuation"},"("),p("endPoint"),a("span",{class:"token punctuation"},"."),p("y "),a("span",{class:"token operator"},"-"),p(" startPoint"),a("span",{class:"token punctuation"},"."),p("y"),a("span",{class:"token punctuation"},")"),p("\n    "),a("span",{class:"token punctuation"},")"),p(),a("span",{class:"token punctuation"},"{"),p("\n      result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"pop"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),p("\n      pointer"),a("span",{class:"token operator"},"--"),p("\n    "),a("span",{class:"token punctuation"},"}"),p(),a("span",{class:"token keyword"},"else"),p(),a("span",{class:"token punctuation"},"{"),p("\n      result"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"push"),a("span",{class:"token punctuation"},"("),p("point"),a("span",{class:"token punctuation"},")"),p("\n      pointer"),a("span",{class:"token operator"},"++"),p("\n      i"),a("span",{class:"token operator"},"--"),p("\n    "),a("span",{class:"token punctuation"},"}"),p("\n  "),a("span",{class:"token punctuation"},"}"),p("\n\n  "),a("span",{class:"token keyword"},"return"),p(" result\n"),a("span",{class:"token punctuation"},"}"),p("\n\n"),a("span",{class:"token keyword"},"export"),p(),a("span",{class:"token keyword"},"default"),p(" graham\n")])]),a("div",{class:"line-numbers-wrapper"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br"),a("span",{class:"line-number"},"10"),a("br"),a("span",{class:"line-number"},"11"),a("br"),a("span",{class:"line-number"},"12"),a("br"),a("span",{class:"line-number"},"13"),a("br"),a("span",{class:"line-number"},"14"),a("br"),a("span",{class:"line-number"},"15"),a("br"),a("span",{class:"line-number"},"16"),a("br"),a("span",{class:"line-number"},"17"),a("br"),a("span",{class:"line-number"},"18"),a("br"),a("span",{class:"line-number"},"19"),a("br"),a("span",{class:"line-number"},"20"),a("br"),a("span",{class:"line-number"},"21"),a("br"),a("span",{class:"line-number"},"22"),a("br"),a("span",{class:"line-number"},"23"),a("br"),a("span",{class:"line-number"},"24"),a("br"),a("span",{class:"line-number"},"25"),a("br"),a("span",{class:"line-number"},"26"),a("br"),a("span",{class:"line-number"},"27"),a("br"),a("span",{class:"line-number"},"28"),a("br"),a("span",{class:"line-number"},"29"),a("br"),a("span",{class:"line-number"},"30"),a("br"),a("span",{class:"line-number"},"31"),a("br"),a("span",{class:"line-number"},"32"),a("br"),a("span",{class:"line-number"},"33"),a("br"),a("span",{class:"line-number"},"34"),a("br"),a("span",{class:"line-number"},"35"),a("br"),a("span",{class:"line-number"},"36"),a("br"),a("span",{class:"line-number"},"37"),a("br"),a("span",{class:"line-number"},"38"),a("br"),a("span",{class:"line-number"},"39"),a("br"),a("span",{class:"line-number"},"40"),a("br"),a("span",{class:"line-number"},"41"),a("br"),a("span",{class:"line-number"},"42"),a("br"),a("span",{class:"line-number"},"43"),a("br"),a("span",{class:"line-number"},"44"),a("br"),a("span",{class:"line-number"},"45"),a("br"),a("span",{class:"line-number"},"46"),a("br"),a("span",{class:"line-number"},"47"),a("br"),a("span",{class:"line-number"},"48"),a("br"),a("span",{class:"line-number"},"49"),a("br"),a("span",{class:"line-number"},"50"),a("br"),a("span",{class:"line-number"},"51"),a("br"),a("span",{class:"line-number"},"52"),a("br"),a("span",{class:"line-number"},"53"),a("br"),a("span",{class:"line-number"},"54"),a("br"),a("span",{class:"line-number"},"55"),a("br"),a("span",{class:"line-number"},"56"),a("br"),a("span",{class:"line-number"},"57"),a("br"),a("span",{class:"line-number"},"58"),a("br"),a("span",{class:"line-number"},"59"),a("br"),a("span",{class:"line-number"},"60"),a("br"),a("span",{class:"line-number"},"61"),a("br"),a("span",{class:"line-number"},"62"),a("br"),a("span",{class:"line-number"},"63"),a("br"),a("span",{class:"line-number"},"64"),a("br"),a("span",{class:"line-number"},"65"),a("br"),a("span",{class:"line-number"},"66"),a("br"),a("span",{class:"line-number"},"67"),a("br"),a("span",{class:"line-number"},"68"),a("br"),a("span",{class:"line-number"},"69"),a("br"),a("span",{class:"line-number"},"70"),a("br"),a("span",{class:"line-number"},"71"),a("br"),a("span",{class:"line-number"},"72"),a("br"),a("span",{class:"line-number"},"73"),a("br"),a("span",{class:"line-number"},"74"),a("br"),a("span",{class:"line-number"},"75"),a("br"),a("span",{class:"line-number"},"76"),a("br"),a("span",{class:"line-number"},"77"),a("br"),a("span",{class:"line-number"},"78"),a("br"),a("span",{class:"line-number"},"79"),a("br"),a("span",{class:"line-number"},"80"),a("br"),a("span",{class:"line-number"},"81"),a("br"),a("span",{class:"line-number"},"82"),a("br"),a("span",{class:"line-number"},"83"),a("br"),a("span",{class:"line-number"},"84"),a("br"),a("span",{class:"line-number"},"85"),a("br"),a("span",{class:"line-number"},"86"),a("br"),a("span",{class:"line-number"},"87"),a("br"),a("span",{class:"line-number"},"88"),a("br"),a("span",{class:"line-number"},"89"),a("br"),a("span",{class:"line-number"},"90"),a("br"),a("span",{class:"line-number"},"91"),a("br"),a("span",{class:"line-number"},"92"),a("br"),a("span",{class:"line-number"},"93"),a("br"),a("span",{class:"line-number"},"94"),a("br"),a("span",{class:"line-number"},"95"),a("br"),a("span",{class:"line-number"},"96"),a("br"),a("span",{class:"line-number"},"97"),a("br"),a("span",{class:"line-number"},"98"),a("br"),a("span",{class:"line-number"},"99"),a("br"),a("span",{class:"line-number"},"100"),a("br"),a("span",{class:"line-number"},"101"),a("br"),a("span",{class:"line-number"},"102"),a("br"),a("span",{class:"line-number"},"103"),a("br"),a("span",{class:"line-number"},"104"),a("br"),a("span",{class:"line-number"},"105"),a("br"),a("span",{class:"line-number"},"106"),a("br"),a("span",{class:"line-number"},"107"),a("br"),a("span",{class:"line-number"},"108"),a("br"),a("span",{class:"line-number"},"109"),a("br"),a("span",{class:"line-number"},"110"),a("br"),a("span",{class:"line-number"},"111"),a("br"),a("span",{class:"line-number"},"112"),a("br"),a("span",{class:"line-number"},"113"),a("br"),a("span",{class:"line-number"},"114"),a("br"),a("span",{class:"line-number"},"115"),a("br"),a("span",{class:"line-number"},"116"),a("br"),a("span",{class:"line-number"},"117"),a("br"),a("span",{class:"line-number"},"118"),a("br"),a("span",{class:"line-number"},"119"),a("br"),a("span",{class:"line-number"},"120"),a("br"),a("span",{class:"line-number"},"121"),a("br"),a("span",{class:"line-number"},"122"),a("br"),a("span",{class:"line-number"},"123"),a("br"),a("span",{class:"line-number"},"124"),a("br"),a("span",{class:"line-number"},"125"),a("br"),a("span",{class:"line-number"},"126"),a("br"),a("span",{class:"line-number"},"127"),a("br"),a("span",{class:"line-number"},"128"),a("br"),a("span",{class:"line-number"},"129"),a("br"),a("span",{class:"line-number"},"130"),a("br"),a("span",{class:"line-number"},"131"),a("br"),a("span",{class:"line-number"},"132"),a("br"),a("span",{class:"line-number"},"133"),a("br")])])],-1),j=e('',5),D=e('',8);g.render=function(p,e,o,l,c,r){const i=t("Show"),u=t("Play");return n(),s("div",null,[f,v,x,P,a(i),_,M,T,a(u,{algorithm:r.exhaust,speed:80},null,8,["algorithm"]),A,z,E,a(u,{algorithm:r.divide,speed:125},null,8,["algorithm"]),S,a(u,{algorithm:r.jarvis,speed:125},null,8,["algorithm"]),I,a(u,{algorithm:r.graham,speed:125},null,8,["algorithm"]),C,j,a(u,{algorithm:r.divide},null,8,["algorithm"]),D])};export default g;export{w as __pageData};
