import{e as n,f as s,g as a,o as e,c as p,a as t,t as o,F as l,d as r,r as c,b as u}from"./app.7ffc70b8.js";function i(n){n.clearRect(0,0,320,320)}function k(n,s){i(n),n.beginPath();let a=s[0];n.moveTo(a.x,a.y);for(let e=1,p=s.length;e<p;e++)a=s[e],n.lineTo(a.x,a.y);n.closePath(),n.strokeStyle="green",n.fillStyle="rgb(0,255,0,0.1)",n.stroke(),n.fill()}var d={setup(){const e=n(),p=n(),t=n();let o,l,r;const c=[],u=n=>{const s={x:n.pageX-r.x,y:n.pageY-r.y};p.value?(t.value=function({x:n,y:s},a){let e=!1;for(let p=a.length,t=0;p--;t=p){const{x:o,y:l}=a[p],{x:r,y:c}=a[t];if(n===o&&s===l||n===r&&s===c)return!0;if(s>=l&&s<=c||s<=l&&s>=c){const a=o+(s-l)*(r-o)/(c-l);if(a===n)return!0;a>n&&(e=!e)}}return e}(s,c),k(l,c),function(n,s){n.fillStyle="red",n.fillRect(s.x-1,s.y-1,2,2)}(l,s)):(t.value=null,c.push(s),k(l,c))},d=n=>{!p.value&&c.length&&k(l,c.concat({x:n.pageX-r.x,y:n.pageY-r.y}))},b=()=>{p.value=!1,t.value=null,c.splice(0),i(l)},m=()=>{p.value?b():c.length>2&&(p.value=!0,k(l,c))},h=n=>{m(),n.stopPropagation(),n.preventDefault()};return s((()=>{o=e.value,l=o.getContext("2d"),r=o.getBoundingClientRect(),o.addEventListener("click",u),o.addEventListener("mousemove",d),o.addEventListener("contextmenu",h)})),a((()=>{o.removeEventListener("click",u),o.removeEventListener("mousemove",d),o.removeEventListener("contextmenu",h)})),{el:e,isPoint:p,result:t,toggle:m,clear:b}}};const b={ref:"el",width:"320",height:"320",style:{border:"1px solid",cursor:"crosshair"}},m=r(" 计算结果: ");d.render=function(n,s,a,r,c,u){return e(),p(l,null,[t("canvas",b,null,512),t("i",{onClick:s[1]||(s[1]=(...n)=>r.toggle&&r.toggle(...n)),style:{margin:"10px"}},o(r.isPoint?"请指定点":"正在绘制多边形")+"(右键切换) ",1),t("i",{onClick:s[2]||(s[2]=(...n)=>r.clear&&r.clear(...n))},"清空"),t("p",null,[m,t("b",{style:"color: "+(r.result?"green":!1===r.result?"red":"")},o(r.result?"点在面内(或边上)":!1===r.result?"点在面外":"--"),5)])],64)};var h={components:{PinP:d}};const y='{"title":"点在面内","description":"","frontmatter":{"title":"点在面内","index":1},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"演示","slug":"演示"},{"level":2,"title":"方法介绍","slug":"方法介绍"},{"level":3,"title":"面积和","slug":"面积和"},{"level":3,"title":"夹角和","slug":"夹角和"},{"level":3,"title":"回转数","slug":"回转数"},{"level":3,"title":"射线法","slug":"射线法"},{"level":2,"title":"射线法实现","slug":"射线法实现"},{"level":2,"title":"升维","slug":"升维"}],"relativePath":"blog/algorithm/pinp.md","lastUpdated":1618507413092}',g=t("h2",{id:"问题描述"},[t("a",{class:"header-anchor",href:"#问题描述","aria-hidden":"true"},"#"),r(" 问题描述")],-1),f=t("p",null,"平面上有一个任意多边形(包括凹凸岛洞交错等), 指定任意平面点, 求该点是否在该多边形内",-1),v=t("h2",{id:"演示"},[t("a",{class:"header-anchor",href:"#演示","aria-hidden":"true"},"#"),r(" 演示")],-1),x=u('<h2 id="方法介绍"><a class="header-anchor" href="#方法介绍" aria-hidden="true">#</a> 方法介绍</h2><h3 id="面积和"><a class="header-anchor" href="#面积和" aria-hidden="true">#</a> 面积和</h3><h3 id="夹角和"><a class="header-anchor" href="#夹角和" aria-hidden="true">#</a> 夹角和</h3><h3 id="回转数"><a class="header-anchor" href="#回转数" aria-hidden="true">#</a> 回转数</h3><h3 id="射线法"><a class="header-anchor" href="#射线法" aria-hidden="true">#</a> 射线法</h3><h2 id="射线法实现"><a class="header-anchor" href="#射线法实现" aria-hidden="true">#</a> 射线法实现</h2><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">pinp</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> px<span class="token punctuation">,</span> y<span class="token operator">:</span> py <span class="token punctuation">}</span><span class="token operator">:</span> Point<span class="token punctuation">,</span> points<span class="token operator">:</span> Point<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> odd <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// py射线与多边形的所有边的相交次数是否为奇数</span>\n\n  <span class="token comment">// points[i]-points[j] 为多边形的一条边</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> points<span class="token punctuation">.</span>length<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">;</span> j <span class="token operator">=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> startX<span class="token punctuation">,</span> y<span class="token operator">:</span> startY <span class="token punctuation">}</span> <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> endX<span class="token punctuation">,</span> y<span class="token operator">:</span> endY <span class="token punctuation">}</span> <span class="token operator">=</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span>\n\n    <span class="token comment">// 点与边的端点重合</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>px <span class="token operator">===</span> startX <span class="token operator">&amp;&amp;</span> py <span class="token operator">===</span> startY<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>px <span class="token operator">===</span> endX <span class="token operator">&amp;&amp;</span> py <span class="token operator">===</span> endY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 点在边的范围内</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>py <span class="token operator">&gt;=</span> startY <span class="token operator">&amp;&amp;</span> py <span class="token operator">&lt;=</span> endY<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>py <span class="token operator">&lt;=</span> startY <span class="token operator">&amp;&amp;</span> py <span class="token operator">&gt;=</span> endY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 边与py射线交点的X坐标</span>\n      <span class="token keyword">const</span> x <span class="token operator">=</span> startX <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>py <span class="token operator">-</span> startY<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>endX <span class="token operator">-</span> startX<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>endY <span class="token operator">-</span> startY<span class="token punctuation">)</span>\n\n      <span class="token comment">// 点在边上</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> px<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token comment">// 射线与边相交</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> px<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        odd <span class="token operator">=</span> <span class="token operator">!</span>odd\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> odd\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="升维"><a class="header-anchor" href="#升维" aria-hidden="true">#</a> 升维</h2><p>在3D场景中要如何实现？</p>',9);h.render=function(n,s,a,o,l,r){const u=c("PinP");return e(),p("div",null,[g,f,v,t(u),x])};export default h;export{y as __pageData};
